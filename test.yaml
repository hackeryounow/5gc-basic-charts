NAME: free5gc
LAST DEPLOYED: Wed May  8 22:25:07 2024
NAMESPACE: free5gc
STATUS: pending-install
REVISION: 1
TEST SUITE: None
USER-SUPPLIED VALUES:
{}

COMPUTED VALUES:
amf:
  affinity: {}
  args: []
  command: []
  common:
    exampleValue: common-chart
    global:
      imagePullSecrets: []
      imageRegistry: ""
      storageClass: ""
  commonAnnotations: {}
  commonLabels: {}
  config:
    amfName: AMF
    logger:
      level: info
    networkName:
      full: Gradiant5G
      short: G5G
    ngapIpList: ""
    nrfUri: ""
    plmnSupportList:
    - plmnId:
        mcc: 999
        mnc: 70
      snssaiList:
      - sd: ffffff
        sst: 1
      - sd: "010203"
        sst: 1
    sbi:
      bindingIPv4: ""
      registerIPv4: ""
    servedGuamiList:
    - amfId: cafe00
      plmnId:
        mcc: 999
        mnc: 70
    supportDnnList:
    - internet
    - MEC
    supportTaiList:
    - plmnId:
        mcc: 999
        mnc: 70
      tac: "000001"
  containerPorts:
    ngap: 38412
    sbi: 8000
  containerSecurityContext:
    enabled: true
    runAsNonRoot: true
    runAsUser: 1001
  customLivenessProbe: {}
  customReadinessProbe: {}
  customStartupProbe: {}
  enabled: true
  extraDeploy: []
  extraEnvVars:
  - name: GIN_MODE
    value: release
  extraEnvVarsCM: ""
  extraEnvVarsSecret: ""
  extraVolumeMounts: []
  extraVolumes: []
  fullnameOverride: ""
  global:
    imagePullSecrets: []
    imageRegistry: ""
    storageClass: ""
  hostAliases: []
  image:
    debug: false
    digest: ""
    pullPolicy: IfNotPresent
    pullSecrets: []
    registry: docker.io
    repository: free5gc/amf
    tag: v3.3.0
  initContainers: []
  kubeVersion: ""
  lifecycleHooks: {}
  livenessProbe:
    enabled: true
    failureThreshold: 5
    initialDelaySeconds: 600
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 5
  nameOverride: ""
  namespaceOverride: ""
  nodeAffinityPreset:
    key: ""
    type: ""
    values: []
  nodeSelector: {}
  podAffinityPreset: ""
  podAnnotations: {}
  podAntiAffinityPreset: soft
  podLabels: {}
  podSecurityContext:
    enabled: true
    fsGroup: 1001
  priorityClassName: ""
  readinessProbe:
    enabled: true
    failureThreshold: 5
    initialDelaySeconds: 30
    periodSeconds: 5
    successThreshold: 1
    timeoutSeconds: 1
  replicaCount: 1
  resources:
    limits: {}
    requests: {}
  schedulerName: ""
  serviceAccount:
    annotations: {}
    automountServiceAccountToken: true
    create: false
    name: ""
  services:
    ngap:
      annotations: {}
      clusterIP: ""
      externalTrafficPolicy: Cluster
      extraPorts: []
      loadBalancerIP: ""
      loadBalancerSourceRanges: []
      nodePorts:
        ngap: ""
      ports:
        ngap: 38412
      sessionAffinity: None
      sessionAffinityConfig: {}
      type: ClusterIP
    sbi:
      annotations: {}
      clusterIP: ""
      externalTrafficPolicy: Cluster
      extraPorts: []
      loadBalancerIP: ""
      loadBalancerSourceRanges: []
      nodePorts:
        sbi: ""
      ports:
        sbi: 8000
      sessionAffinity: None
      sessionAffinityConfig: {}
      type: ClusterIP
  sessionAffinity: None
  sidecars: []
  startupProbe:
    enabled: false
    failureThreshold: 5
    initialDelaySeconds: 600
    path: /
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 5
  tolerations: []
  topologySpreadConstraints: []
  updateStrategy:
    type: RollingUpdate
ausf:
  affinity: {}
  args: []
  command: []
  commonAnnotations: {}
  commonLabels: {}
  config:
    logger:
      level: info
    nrfUri: ""
    plmnSupportList:
    - mcc: 999
      mnc: 70
    sbi:
      bindingIPv4: ""
      registerIPv4: ""
  containerPorts:
    sbi: 8000
  containerSecurityContext:
    enabled: true
    runAsNonRoot: true
    runAsUser: 1001
  customLivenessProbe: {}
  customReadinessProbe: {}
  customStartupProbe: {}
  enabled: true
  extraDeploy: []
  extraEnvVars:
  - name: GIN_MODE
    value: release
  extraEnvVarsCM: ""
  extraEnvVarsSecret: ""
  extraVolumeMounts: []
  extraVolumes: []
  fullnameOverride: ""
  global:
    imagePullSecrets: []
    imageRegistry: ""
    storageClass: ""
  hostAliases: []
  image:
    debug: false
    digest: ""
    pullPolicy: IfNotPresent
    pullSecrets: []
    registry: docker.io
    repository: free5gc/ausf
    tag: v3.3.0
  initContainers: []
  kubeVersion: ""
  lifecycleHooks: {}
  livenessProbe:
    enabled: true
    failureThreshold: 5
    initialDelaySeconds: 600
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 5
  nameOverride: ""
  namespaceOverride: ""
  nodeAffinityPreset:
    key: ""
    type: ""
    values: []
  nodeSelector: {}
  podAffinityPreset: ""
  podAnnotations: {}
  podAntiAffinityPreset: soft
  podLabels: {}
  podSecurityContext:
    enabled: true
    fsGroup: 1001
  priorityClassName: ""
  readinessProbe:
    enabled: true
    failureThreshold: 5
    initialDelaySeconds: 30
    periodSeconds: 5
    successThreshold: 1
    timeoutSeconds: 1
  replicaCount: 1
  resources:
    limits: {}
    requests: {}
  schedulerName: ""
  serviceAccount:
    annotations: {}
    automountServiceAccountToken: true
    create: false
    name: ""
  services:
    sbi:
      annotations: {}
      clusterIP: ""
      externalTrafficPolicy: Cluster
      extraPorts: []
      loadBalancerIP: ""
      loadBalancerSourceRanges: []
      nodePorts:
        sbi: ""
      ports:
        sbi: 8000
      sessionAffinity: None
      sessionAffinityConfig: {}
      type: ClusterIP
  sessionAffinity: None
  sidecars: []
  startupProbe:
    enabled: false
    failureThreshold: 5
    initialDelaySeconds: 600
    path: /
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 5
  tolerations: []
  topologySpreadConstraints: []
  updateStrategy:
    type: RollingUpdate
chf:
  affinity: {}
  args: []
  command: []
  commonAnnotations: {}
  commonLabels: {}
  config:
    cgf:
      hostIPv4: ""
    logger:
      level: info
    mongodb:
      url: ""
    nrfUri: ""
    sbi:
      bindingIPv4: ""
      registerIPv4: ""
  containerPorts:
    sbi: 8000
  containerSecurityContext:
    enabled: true
    runAsNonRoot: true
    runAsUser: 1001
  customLivenessProbe: {}
  customReadinessProbe: {}
  customStartupProbe: {}
  enabled: true
  extraDeploy: []
  extraEnvVars:
  - name: GIN_MODE
    value: release
  extraEnvVarsCM: ""
  extraEnvVarsSecret: ""
  extraVolumeMounts: []
  extraVolumes: []
  fullnameOverride: ""
  global:
    imagePullSecrets: []
    imageRegistry: ""
    storageClass: ""
  hostAliases: []
  image:
    debug: false
    digest: ""
    pullPolicy: IfNotPresent
    pullSecrets: []
    registry: docker.io
    repository: free5gc/chf
    tag: latest
  initContainers: []
  kubeVersion: ""
  lifecycleHooks: {}
  livenessProbe:
    enabled: true
    failureThreshold: 5
    initialDelaySeconds: 600
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 5
  nameOverride: ""
  namespaceOverride: ""
  nodeAffinityPreset:
    key: ""
    type: ""
    values: []
  nodeSelector: {}
  podAffinityPreset: ""
  podAnnotations: {}
  podAntiAffinityPreset: soft
  podLabels: {}
  podSecurityContext:
    enabled: true
    fsGroup: 1001
  priorityClassName: ""
  readinessProbe:
    enabled: true
    failureThreshold: 5
    initialDelaySeconds: 30
    periodSeconds: 5
    successThreshold: 1
    timeoutSeconds: 1
  replicaCount: 1
  resources:
    limits: {}
    requests: {}
  schedulerName: ""
  serviceAccount:
    annotations: {}
    automountServiceAccountToken: true
    create: false
    name: ""
  services:
    sbi:
      annotations: {}
      clusterIP: ""
      externalTrafficPolicy: Cluster
      extraPorts: []
      loadBalancerIP: ""
      loadBalancerSourceRanges: []
      nodePorts:
        sbi: ""
      ports:
        sbi: 8000
      sessionAffinity: None
      sessionAffinityConfig: {}
      type: ClusterIP
  sessionAffinity: None
  sidecars: []
  startupProbe:
    enabled: false
    failureThreshold: 5
    initialDelaySeconds: 600
    path: /
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 5
  tolerations: []
  topologySpreadConstraints: []
  updateStrategy:
    type: RollingUpdate
common:
  exampleValue: common-chart
  global: {}
mongodb:
  affinity: {}
  annotations: {}
  arbiter:
    affinity: {}
    annotations: {}
    args: []
    command: []
    configuration: ""
    containerPorts:
      mongodb: 27017
    containerSecurityContext:
      enabled: true
      runAsNonRoot: true
      runAsUser: 1001
    customLivenessProbe: {}
    customReadinessProbe: {}
    customStartupProbe: {}
    enabled: true
    existingConfigmap: ""
    extraEnvVars: []
    extraEnvVarsCM: ""
    extraEnvVarsSecret: ""
    extraFlags: []
    extraVolumeMounts: []
    extraVolumes: []
    hostAliases: []
    initContainers: []
    labels: {}
    lifecycleHooks: {}
    livenessProbe:
      enabled: true
      failureThreshold: 6
      initialDelaySeconds: 30
      periodSeconds: 20
      successThreshold: 1
      timeoutSeconds: 10
    nodeAffinityPreset:
      key: ""
      type: ""
      values: []
    nodeSelector: {}
    pdb:
      create: false
      maxUnavailable: ""
      minAvailable: 1
    podAffinityPreset: ""
    podAnnotations: {}
    podAntiAffinityPreset: soft
    podLabels: {}
    podManagementPolicy: OrderedReady
    podSecurityContext:
      enabled: true
      fsGroup: 1001
      sysctls: []
    priorityClassName: ""
    readinessProbe:
      enabled: true
      failureThreshold: 6
      initialDelaySeconds: 5
      periodSeconds: 20
      successThreshold: 1
      timeoutSeconds: 10
    resources:
      limits: {}
      requests: {}
    runtimeClassName: ""
    schedulerName: ""
    service:
      annotations: {}
      extraPorts: []
      nameOverride: ""
      ports:
        mongodb: 27017
    sidecars: []
    startupProbe:
      enabled: false
      failureThreshold: 30
      initialDelaySeconds: 5
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 5
    terminationGracePeriodSeconds: ""
    tolerations: []
    topologySpreadConstraints: []
    updateStrategy:
      type: RollingUpdate
  architecture: standalone
  args: []
  auth:
    database: ""
    databases: []
    enabled: false
    existingSecret: ""
    password: ""
    passwords: []
    replicaSetKey: ""
    rootPassword: ""
    rootUser: root
    username: ""
    usernames: []
  clusterDomain: cluster.local
  command: []
  common:
    exampleValue: common-chart
    global:
      imagePullSecrets: []
      imageRegistry: ""
      namespaceOverride: ""
      storageClass: ""
  commonAnnotations: {}
  commonLabels: {}
  configuration: ""
  containerPorts:
    mongodb: 27017
  containerSecurityContext:
    enabled: true
    runAsNonRoot: true
    runAsUser: 1001
  customLivenessProbe: {}
  customReadinessProbe: {}
  customStartupProbe: {}
  diagnosticMode:
    args:
    - infinity
    command:
    - sleep
    enabled: false
  directoryPerDB: false
  disableJavascript: false
  disableSystemLog: false
  enableIPv6: false
  enableJournal: true
  enabled: true
  existingConfigmap: ""
  externalAccess:
    autoDiscovery:
      enabled: false
      image:
        pullPolicy: IfNotPresent
        pullSecrets: []
        registry: docker.io
        repository: bitnami/kubectl
        tag: 1.24.3-debian-11-r7
      resources:
        limits: {}
        requests: {}
    enabled: false
    hidden:
      enabled: false
      service:
        annotations: {}
        domain: ""
        externalTrafficPolicy: Local
        extraPorts: []
        loadBalancerIPs: []
        loadBalancerSourceRanges: []
        nodePorts: []
        portName: mongodb
        ports:
          mongodb: 27017
        sessionAffinity: None
        sessionAffinityConfig: {}
        type: LoadBalancer
    service:
      annotations: {}
      domain: ""
      externalTrafficPolicy: Local
      extraPorts: []
      loadBalancerIPs: []
      loadBalancerSourceRanges: []
      nodePorts: []
      portName: mongodb
      ports:
        mongodb: 27017
      sessionAffinity: None
      sessionAffinityConfig: {}
      type: LoadBalancer
  extraDeploy: []
  extraEnvVars: []
  extraEnvVarsCM: ""
  extraEnvVarsSecret: ""
  extraFlags: []
  extraVolumeMounts: []
  extraVolumes: []
  fullnameOverride: ""
  global:
    imagePullSecrets: []
    imageRegistry: ""
    namespaceOverride: ""
    storageClass: ""
  hidden:
    affinity: {}
    annotations: {}
    args: []
    command: []
    configuration: ""
    containerPorts:
      mongodb: 27017
    containerSecurityContext:
      enabled: true
      runAsNonRoot: true
      runAsUser: 1001
    customLivenessProbe: {}
    customReadinessProbe: {}
    customStartupProbe: {}
    enabled: false
    existingConfigmap: ""
    extraEnvVars: []
    extraEnvVarsCM: ""
    extraEnvVarsSecret: ""
    extraFlags: []
    extraVolumeMounts: []
    extraVolumes: []
    hostAliases: []
    initContainers: []
    labels: {}
    lifecycleHooks: {}
    livenessProbe:
      enabled: true
      failureThreshold: 6
      initialDelaySeconds: 30
      periodSeconds: 20
      successThreshold: 1
      timeoutSeconds: 10
    nodeAffinityPreset:
      key: ""
      type: ""
      values: []
    nodeSelector: {}
    pdb:
      create: false
      maxUnavailable: ""
      minAvailable: 1
    persistence:
      accessModes:
      - ReadWriteOnce
      annotations: {}
      enabled: true
      medium: ""
      mountPath: /bitnami/mongodb
      size: 8Gi
      storageClass: ""
      subPath: ""
      volumeClaimTemplates:
        dataSource: {}
        requests: {}
        selector: {}
    podAffinityPreset: ""
    podAnnotations: {}
    podAntiAffinityPreset: soft
    podLabels: {}
    podManagementPolicy: OrderedReady
    podSecurityContext:
      enabled: true
      fsGroup: 1001
      sysctls: []
    priorityClassName: ""
    readinessProbe:
      enabled: true
      failureThreshold: 6
      initialDelaySeconds: 5
      periodSeconds: 20
      successThreshold: 1
      timeoutSeconds: 10
    replicaCount: 1
    resources:
      limits: {}
      requests: {}
    runtimeClassName: ""
    schedulerName: ""
    service:
      annotations: {}
      extraPorts: []
      portName: mongodb
      ports:
        mongodb: 27017
    sidecars: []
    startupProbe:
      enabled: false
      failureThreshold: 30
      initialDelaySeconds: 5
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 5
    terminationGracePeriodSeconds: ""
    tolerations: []
    topologySpreadConstraints: []
    updateStrategy:
      type: RollingUpdate
  hostAliases: []
  image:
    debug: false
    pullPolicy: IfNotPresent
    pullSecrets: []
    registry: docker.io
    repository: bitnami/mongodb
    tag: 5.0.10-debian-11-r3
  initContainers: []
  initdbScripts: {}
  initdbScriptsConfigMap: ""
  kubeVersion: ""
  labels: {}
  lifecycleHooks: {}
  livenessProbe:
    enabled: true
    failureThreshold: 6
    initialDelaySeconds: 30
    periodSeconds: 20
    successThreshold: 1
    timeoutSeconds: 10
  metrics:
    args: []
    command: []
    containerPort: 9216
    customLivenessProbe: {}
    customReadinessProbe: {}
    customStartupProbe: {}
    enabled: false
    extraFlags: ""
    image:
      pullPolicy: IfNotPresent
      pullSecrets: []
      registry: docker.io
      repository: bitnami/mongodb-exporter
      tag: 0.33.0-debian-11-r9
    livenessProbe:
      enabled: true
      failureThreshold: 3
      initialDelaySeconds: 15
      periodSeconds: 5
      successThreshold: 1
      timeoutSeconds: 5
    password: ""
    prometheusRule:
      additionalLabels: {}
      enabled: false
      namespace: ""
      rules: []
    readinessProbe:
      enabled: true
      failureThreshold: 3
      initialDelaySeconds: 5
      periodSeconds: 5
      successThreshold: 1
      timeoutSeconds: 1
    resources:
      limits: {}
      requests: {}
    service:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: '{{ .Values.metrics.service.ports.metrics }}'
        prometheus.io/scrape: "true"
      extraPorts: []
      ports:
        metrics: 9216
      type: ClusterIP
    serviceMonitor:
      enabled: false
      honorLabels: false
      interval: 30s
      jobLabel: ""
      labels: {}
      metricRelabelings: []
      namespace: ""
      relabelings: []
      scrapeTimeout: ""
      selector: {}
    startupProbe:
      enabled: false
      failureThreshold: 30
      initialDelaySeconds: 5
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 5
    username: ""
  nameOverride: ""
  namespaceOverride: ""
  nodeAffinityPreset:
    key: ""
    type: ""
    values: []
  nodeSelector: {}
  pdb:
    create: false
    maxUnavailable: ""
    minAvailable: 1
  persistence:
    accessModes:
    - ReadWriteOnce
    annotations: {}
    enabled: true
    existingClaim: ""
    medium: ""
    mountPath: /bitnami/mongodb
    resourcePolicy: ""
    size: 8Gi
    storageClass: ""
    subPath: ""
    volumeClaimTemplates:
      dataSource: {}
      requests: {}
      selector: {}
  podAffinityPreset: ""
  podAnnotations: {}
  podAntiAffinityPreset: soft
  podLabels: {}
  podManagementPolicy: OrderedReady
  podSecurityContext:
    enabled: true
    fsGroup: 1001
    sysctls: []
  podSecurityPolicy:
    allowPrivilegeEscalation: false
    create: false
    privileged: false
    spec: {}
  priorityClassName: ""
  rbac:
    create: false
    rules: []
  readinessProbe:
    enabled: true
    failureThreshold: 6
    initialDelaySeconds: 5
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 5
  replicaCount: 2
  replicaSetConfigurationSettings:
    configuration: {}
    enabled: false
  replicaSetHostnames: true
  replicaSetName: rs0
  resources:
    limits: {}
    requests: {}
  runtimeClassName: ""
  schedulerName: ""
  service:
    annotations: {}
    clusterIP: ""
    externalIPs: []
    externalTrafficPolicy: Local
    extraPorts: []
    loadBalancerIP: ""
    loadBalancerSourceRanges: []
    nameOverride: ""
    nodePorts:
      mongodb: ""
    portName: mongodb
    ports:
      mongodb: 27017
    sessionAffinity: None
    sessionAffinityConfig: {}
    type: ClusterIP
  serviceAccount:
    annotations: {}
    automountServiceAccountToken: true
    create: true
    name: ""
  sidecars: []
  startupProbe:
    enabled: false
    failureThreshold: 30
    initialDelaySeconds: 5
    periodSeconds: 20
    successThreshold: 1
    timeoutSeconds: 10
  systemLogVerbosity: 0
  terminationGracePeriodSeconds: ""
  tls:
    autoGenerated: true
    caCert: ""
    caKey: ""
    enabled: false
    existingSecret: ""
    extraDnsNames: []
    image:
      pullPolicy: IfNotPresent
      pullSecrets: []
      registry: docker.io
      repository: bitnami/nginx
      tag: 1.23.1-debian-11-r4
    mode: requireTLS
    resources:
      limits: {}
      requests: {}
  tolerations: []
  topologySpreadConstraints: []
  updateStrategy:
    type: RollingUpdate
  useStatefulSet: false
  volumePermissions:
    enabled: false
    image:
      pullPolicy: IfNotPresent
      pullSecrets: []
      registry: docker.io
      repository: bitnami/bitnami-shell
      tag: 11-debian-11-r21
    resources:
      limits: {}
      requests: {}
    securityContext:
      runAsUser: 0
nrf:
  affinity: {}
  args: []
  command: []
  commonAnnotations: {}
  commonLabels: {}
  config:
    DefaultPlmnId:
      mcc: 999
      mnc: 70
    MongoDBUrl: ""
    logger:
      level: info
    sbi:
      bindingIPv4: ""
      registerIPv4: ""
  containerPorts:
    sbi: 8000
  containerSecurityContext:
    enabled: true
    runAsNonRoot: true
    runAsUser: 1001
  customLivenessProbe: {}
  customReadinessProbe: {}
  customStartupProbe: {}
  enabled: true
  extraDeploy: []
  extraEnvVars:
  - name: GIN_MODE
    value: release
  extraEnvVarsCM: ""
  extraEnvVarsSecret: ""
  extraVolumeMounts: []
  extraVolumes: []
  fullnameOverride: ""
  global:
    imagePullSecrets: []
    imageRegistry: ""
    storageClass: ""
  hostAliases: []
  image:
    debug: false
    digest: ""
    pullPolicy: IfNotPresent
    pullSecrets: []
    registry: docker.io
    repository: free5gc/nrf
    tag: v3.3.0
  initContainers: []
  kubeVersion: ""
  lifecycleHooks: {}
  livenessProbe:
    enabled: true
    failureThreshold: 5
    initialDelaySeconds: 600
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 5
  nameOverride: ""
  namespaceOverride: ""
  nodeAffinityPreset:
    key: ""
    type: ""
    values: []
  nodeSelector: {}
  podAffinityPreset: ""
  podAnnotations: {}
  podAntiAffinityPreset: soft
  podLabels: {}
  podSecurityContext:
    enabled: true
    fsGroup: 1001
  priorityClassName: ""
  readinessProbe:
    enabled: true
    failureThreshold: 5
    initialDelaySeconds: 30
    periodSeconds: 5
    successThreshold: 1
    timeoutSeconds: 1
  replicaCount: 1
  resources:
    limits: {}
    requests: {}
  schedulerName: ""
  serviceAccount:
    annotations: {}
    automountServiceAccountToken: true
    create: false
    name: ""
  services:
    sbi:
      annotations: {}
      clusterIP: ""
      externalTrafficPolicy: Cluster
      extraPorts: []
      loadBalancerIP: ""
      loadBalancerSourceRanges: []
      nodePorts:
        sbi: ""
      ports:
        sbi: 8000
      sessionAffinity: None
      sessionAffinityConfig: {}
      type: ClusterIP
  sessionAffinity: None
  sidecars: []
  startupProbe:
    enabled: false
    failureThreshold: 5
    initialDelaySeconds: 600
    path: /
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 5
  tolerations: []
  topologySpreadConstraints: []
  updateStrategy:
    type: RollingUpdate
nssf:
  affinity: {}
  args: []
  command: []
  commonAnnotations: {}
  commonLabels: {}
  config:
    logger:
      level: info
    nrfUri: ""
    nsiList:
    - nsiInformationList:
      - nrfId: http://free5gc-nrf-sbi:8000/nnrf-nfm/v1/nf-instances
        nsiId: 10
      snssai:
        sd: ffffff
        sst: 1
    nssfName: NSSF
    sbi:
      bindingIPv4: ""
      registerIPv4: ""
    supportedNssaiInPlmnList:
    - plmnId:
        mcc: 999
        mnc: 70
      supportedSnssaiList:
      - sd: ffffff
        sst: 1
      - sd: "010203"
        sst: 1
    supportedPlmnList:
    - mcc: 999
      mnc: 70
  containerPorts:
    sbi: 8000
  containerSecurityContext:
    enabled: true
    runAsNonRoot: true
    runAsUser: 1001
  customLivenessProbe: {}
  customReadinessProbe: {}
  customStartupProbe: {}
  enabled: true
  extraDeploy: []
  extraEnvVars:
  - name: GIN_MODE
    value: release
  extraEnvVarsCM: ""
  extraEnvVarsSecret: ""
  extraVolumeMounts: []
  extraVolumes: []
  fullnameOverride: ""
  global:
    imagePullSecrets: []
    imageRegistry: ""
    storageClass: ""
  hostAliases: []
  image:
    debug: false
    digest: ""
    pullPolicy: IfNotPresent
    pullSecrets: []
    registry: docker.io
    repository: free5gc/nssf
    tag: v3.3.0
  initContainers: []
  kubeVersion: ""
  lifecycleHooks: {}
  livenessProbe:
    enabled: true
    failureThreshold: 5
    initialDelaySeconds: 600
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 5
  nameOverride: ""
  namespaceOverride: ""
  nodeAffinityPreset:
    key: ""
    type: ""
    values: []
  nodeSelector: {}
  podAffinityPreset: ""
  podAnnotations: {}
  podAntiAffinityPreset: soft
  podLabels: {}
  podSecurityContext:
    enabled: true
    fsGroup: 1001
  priorityClassName: ""
  readinessProbe:
    enabled: true
    failureThreshold: 5
    initialDelaySeconds: 30
    periodSeconds: 5
    successThreshold: 1
    timeoutSeconds: 1
  replicaCount: 1
  resources:
    limits: {}
    requests: {}
  schedulerName: ""
  serviceAccount:
    annotations: {}
    automountServiceAccountToken: true
    create: false
    name: ""
  services:
    sbi:
      annotations: {}
      clusterIP: ""
      externalTrafficPolicy: Cluster
      extraPorts: []
      loadBalancerIP: ""
      loadBalancerSourceRanges: []
      nodePorts:
        sbi: ""
      ports:
        sbi: 8000
      sessionAffinity: None
      sessionAffinityConfig: {}
      type: ClusterIP
  sessionAffinity: None
  sidecars: []
  startupProbe:
    enabled: false
    failureThreshold: 5
    initialDelaySeconds: 600
    path: /
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 5
  tolerations: []
  topologySpreadConstraints: []
  updateStrategy:
    type: RollingUpdate
pcf:
  affinity: {}
  args: []
  command: []
  commonAnnotations: {}
  commonLabels: {}
  config:
    logger:
      level: info
    mongodb:
      url: ""
    nrfUri: ""
    pcfName: PCF
    sbi:
      bindingIPv4: ""
      registerIPv4: ""
  containerPorts:
    sbi: 8000
  containerSecurityContext:
    enabled: true
    runAsNonRoot: true
    runAsUser: 1001
  customLivenessProbe: {}
  customReadinessProbe: {}
  customStartupProbe: {}
  enabled: true
  extraDeploy: []
  extraEnvVars:
  - name: GIN_MODE
    value: release
  extraEnvVarsCM: ""
  extraEnvVarsSecret: ""
  extraVolumeMounts: []
  extraVolumes: []
  fullnameOverride: ""
  global:
    imagePullSecrets: []
    imageRegistry: ""
    storageClass: ""
  hostAliases: []
  image:
    debug: false
    digest: ""
    pullPolicy: IfNotPresent
    pullSecrets: []
    registry: docker.io
    repository: free5gc/pcf
    tag: v3.3.0
  initContainers: []
  kubeVersion: ""
  lifecycleHooks: {}
  livenessProbe:
    enabled: true
    failureThreshold: 5
    initialDelaySeconds: 600
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 5
  nameOverride: ""
  namespaceOverride: ""
  nodeAffinityPreset:
    key: ""
    type: ""
    values: []
  nodeSelector: {}
  podAffinityPreset: ""
  podAnnotations: {}
  podAntiAffinityPreset: soft
  podLabels: {}
  podSecurityContext:
    enabled: true
    fsGroup: 1001
  priorityClassName: ""
  readinessProbe:
    enabled: true
    failureThreshold: 5
    initialDelaySeconds: 30
    periodSeconds: 5
    successThreshold: 1
    timeoutSeconds: 1
  replicaCount: 1
  resources:
    limits: {}
    requests: {}
  schedulerName: ""
  serviceAccount:
    annotations: {}
    automountServiceAccountToken: true
    create: false
    name: ""
  services:
    sbi:
      annotations: {}
      clusterIP: ""
      externalTrafficPolicy: Cluster
      extraPorts: []
      loadBalancerIP: ""
      loadBalancerSourceRanges: []
      nodePorts:
        sbi: ""
      ports:
        sbi: 8000
      sessionAffinity: None
      sessionAffinityConfig: {}
      type: ClusterIP
  sessionAffinity: None
  sidecars: []
  startupProbe:
    enabled: false
    failureThreshold: 5
    initialDelaySeconds: 600
    path: /
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 5
  tolerations: []
  topologySpreadConstraints: []
  updateStrategy:
    type: RollingUpdate
smf:
  config:
    logger:
      level: info
    nrfUri: ""
    pfcp:
      externalAddr: ""
      listenAddr: ""
      nodeID: ""
    plmnList:
    - mcc: 999
      mnc: 70
    sbi:
      bindingIPv4: ""
      registerIPv4: ""
    smfName: SMF
    snssaiInfos:
    - dnnInfos:
      - dnn: internet
        dns:
          ipv4: 8.8.8.8
          ipv6: 2001:4860:4860::8888
      sNssai:
        sd: ffffff
        sst: 1
    userplaneInformation:
      upNodes:
        UPF:
          addr: ""
          interfaces:
            endpoints: ""
            networkInstances: internet
          nodeID: ""
          sNssaiUpfInfos:
          - dnnUpfInfoList:
            - dnn: internet
              pools:
              - cidr: 10.60.0.0/16
              staticPools:
              - cidr: 10.60.100.0/24
            sNssai:
              sd: ffffff
              sst: 1
  enabled: true
  image:
    debug: false
    digest: ""
    pullPolicy: IfNotPresent
    pullSecrets: []
    registry: docker.io
    repository: free5gc/smf
    tag: v3.3.0
smf1:
  affinity: {}
  args: []
  command: []
  commonAnnotations: {}
  commonLabels: {}
  config:
    logger:
      level: info
    nrfUri: ""
    pfcp:
      externalAddr: ""
      listenAddr: ""
      nodeID: ""
    plmnList:
    - mcc: 999
      mnc: 70
    sbi:
      bindingIPv4: ""
      registerIPv4: ""
    smfName: SMF
    snssaiInfos:
    - dnnInfos:
      - dnn: internet
        dns:
          ipv4: 8.8.8.8
          ipv6: 2001:4860:4860::8888
      sNssai:
        sd: ffffff
        sst: 1
    userplaneInformation:
      upNodes:
        UPF:
          addr: ""
          interfaces:
            endpoints: ""
            networkInstances: internet
          nodeID: ""
          sNssaiUpfInfos:
          - dnnUpfInfoList:
            - dnn: internet
              pools:
              - cidr: 10.60.0.0/16
              staticPools:
              - cidr: 10.60.100.0/24
            sNssai:
              sd: ffffff
              sst: 1
  containerPorts:
    pfcp: 8805
    sbi: 8000
  containerSecurityContext:
    enabled: true
    runAsNonRoot: true
    runAsUser: 1001
  customLivenessProbe: {}
  customReadinessProbe: {}
  customStartupProbe: {}
  extraDeploy: []
  extraEnvVars:
  - name: GIN_MODE
    value: release
  extraEnvVarsCM: ""
  extraEnvVarsSecret: ""
  extraVolumeMounts: []
  extraVolumes: []
  fullnameOverride: ""
  global:
    imagePullSecrets: []
    imageRegistry: ""
    storageClass: ""
  hostAliases: []
  image:
    debug: false
    digest: ""
    pullPolicy: IfNotPresent
    pullSecrets: []
    registry: docker.io
    repository: free5gc/smf
    tag: v3.3.0
  initContainers: []
  kubeVersion: ""
  lifecycleHooks: {}
  livenessProbe:
    enabled: true
    failureThreshold: 5
    initialDelaySeconds: 600
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 5
  nameOverride: ""
  namespaceOverride: ""
  nodeAffinityPreset:
    key: ""
    type: ""
    values: []
  nodeSelector: {}
  podAffinityPreset: ""
  podAnnotations: {}
  podAntiAffinityPreset: soft
  podLabels: {}
  podSecurityContext:
    enabled: true
    fsGroup: 1001
  priorityClassName: ""
  readinessProbe:
    enabled: true
    failureThreshold: 5
    initialDelaySeconds: 30
    periodSeconds: 5
    successThreshold: 1
    timeoutSeconds: 1
  replicaCount: 1
  resources:
    limits: {}
    requests: {}
  schedulerName: ""
  serviceAccount:
    annotations: {}
    automountServiceAccountToken: true
    create: false
    name: ""
  services:
    pfcp:
      annotations: {}
      clusterIP: ""
      externalTrafficPolicy: Cluster
      extraPorts: []
      loadBalancerIP: ""
      loadBalancerSourceRanges: []
      nodePorts:
        pfcp: ""
      ports:
        pfcp: 8805
      sessionAffinity: None
      sessionAffinityConfig: {}
      type: ClusterIP
    sbi:
      annotations: {}
      clusterIP: ""
      externalTrafficPolicy: Cluster
      extraPorts: []
      loadBalancerIP: ""
      loadBalancerSourceRanges: []
      nodePorts:
        sbi: ""
      ports:
        sbi: 8000
      sessionAffinity: None
      sessionAffinityConfig: {}
      type: ClusterIP
  sessionAffinity: None
  sidecars: []
  startupProbe:
    enabled: false
    failureThreshold: 5
    initialDelaySeconds: 600
    path: /
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 5
  tolerations: []
  topologySpreadConstraints: []
  updateStrategy:
    type: RollingUpdate
smf2:
  affinity: {}
  args: []
  command: []
  commonAnnotations: {}
  commonLabels: {}
  config:
    logger:
      level: info
    nrfUri: ""
    pfcp:
      externalAddr: ""
      listenAddr: ""
      nodeID: ""
    plmnList:
    - mcc: 999
      mnc: 70
    sbi:
      bindingIPv4: ""
      registerIPv4: ""
    smfName: SMF2
    snssaiInfos:
    - dnnInfos:
      - dnn: internet
        dns:
          ipv4: 8.8.8.8
          ipv6: 2001:4860:4860::8888
      sNssai:
        sd: "010203"
        sst: 1
    userplaneInformation:
      upNodes:
        UPF:
          addr: ""
          interfaces:
            endpoints: ""
            networkInstances: internet
          nodeID: ""
          sNssaiUpfInfos:
          - dnnUpfInfoList:
            - dnn: internet
              pools:
              - cidr: 10.60.0.0/16
              staticPools:
              - cidr: 10.60.100.0/24
            sNssai:
              sd: "010203"
              sst: 1
  containerPorts:
    pfcp: 8805
    sbi: 8000
  containerSecurityContext:
    enabled: true
    runAsNonRoot: true
    runAsUser: 1001
  customLivenessProbe: {}
  customReadinessProbe: {}
  customStartupProbe: {}
  enabled: true
  extraDeploy: []
  extraEnvVars:
  - name: GIN_MODE
    value: release
  extraEnvVarsCM: ""
  extraEnvVarsSecret: ""
  extraVolumeMounts: []
  extraVolumes: []
  fullnameOverride: ""
  global:
    imagePullSecrets: []
    imageRegistry: ""
    storageClass: ""
  hostAliases: []
  image:
    debug: false
    digest: ""
    pullPolicy: IfNotPresent
    pullSecrets: []
    registry: docker.io
    repository: free5gc/smf
    tag: v3.3.0
  initContainers: []
  kubeVersion: ""
  lifecycleHooks: {}
  livenessProbe:
    enabled: true
    failureThreshold: 5
    initialDelaySeconds: 600
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 5
  nameOverride: ""
  namespaceOverride: ""
  nodeAffinityPreset:
    key: ""
    type: ""
    values: []
  nodeSelector: {}
  podAffinityPreset: ""
  podAnnotations: {}
  podAntiAffinityPreset: soft
  podLabels: {}
  podSecurityContext:
    enabled: true
    fsGroup: 1001
  priorityClassName: ""
  readinessProbe:
    enabled: true
    failureThreshold: 5
    initialDelaySeconds: 30
    periodSeconds: 5
    successThreshold: 1
    timeoutSeconds: 1
  replicaCount: 1
  resources:
    limits: {}
    requests: {}
  schedulerName: ""
  serviceAccount:
    annotations: {}
    automountServiceAccountToken: true
    create: false
    name: ""
  services:
    pfcp:
      annotations: {}
      clusterIP: ""
      externalTrafficPolicy: Cluster
      extraPorts: []
      loadBalancerIP: ""
      loadBalancerSourceRanges: []
      nodePorts:
        pfcp: ""
      ports:
        pfcp: 8805
      sessionAffinity: None
      sessionAffinityConfig: {}
      type: ClusterIP
    sbi:
      annotations: {}
      clusterIP: ""
      externalTrafficPolicy: Cluster
      extraPorts: []
      loadBalancerIP: ""
      loadBalancerSourceRanges: []
      nodePorts:
        sbi: ""
      ports:
        sbi: 8000
      sessionAffinity: None
      sessionAffinityConfig: {}
      type: ClusterIP
  sessionAffinity: None
  sidecars: []
  startupProbe:
    enabled: false
    failureThreshold: 5
    initialDelaySeconds: 600
    path: /
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 5
  tolerations: []
  topologySpreadConstraints: []
  updateStrategy:
    type: RollingUpdate
udm:
  affinity: {}
  args: []
  command: []
  commonAnnotations: {}
  commonLabels: {}
  config:
    logger:
      level: info
    nrfUri: ""
    sbi:
      bindingIPv4: ""
      registerIPv4: ""
  containerPorts:
    sbi: 8000
  containerSecurityContext:
    enabled: true
    runAsNonRoot: true
    runAsUser: 1001
  customLivenessProbe: {}
  customReadinessProbe: {}
  customStartupProbe: {}
  enabled: true
  extraDeploy: []
  extraEnvVars:
  - name: GIN_MODE
    value: release
  extraEnvVarsCM: ""
  extraEnvVarsSecret: ""
  extraVolumeMounts: []
  extraVolumes: []
  fullnameOverride: ""
  global:
    imagePullSecrets: []
    imageRegistry: ""
    storageClass: ""
  hostAliases: []
  image:
    debug: false
    digest: ""
    pullPolicy: IfNotPresent
    pullSecrets: []
    registry: docker.io
    repository: free5gc/udm
    tag: v3.3.0
  initContainers: []
  kubeVersion: ""
  lifecycleHooks: {}
  livenessProbe:
    enabled: true
    failureThreshold: 5
    initialDelaySeconds: 600
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 5
  nameOverride: ""
  namespaceOverride: ""
  nodeAffinityPreset:
    key: ""
    type: ""
    values: []
  nodeSelector: {}
  podAffinityPreset: ""
  podAnnotations: {}
  podAntiAffinityPreset: soft
  podLabels: {}
  podSecurityContext:
    enabled: true
    fsGroup: 1001
  priorityClassName: ""
  readinessProbe:
    enabled: true
    failureThreshold: 5
    initialDelaySeconds: 30
    periodSeconds: 5
    successThreshold: 1
    timeoutSeconds: 1
  replicaCount: 1
  resources:
    limits: {}
    requests: {}
  schedulerName: ""
  serviceAccount:
    annotations: {}
    automountServiceAccountToken: true
    create: false
    name: ""
  services:
    sbi:
      annotations: {}
      clusterIP: ""
      externalTrafficPolicy: Cluster
      extraPorts: []
      loadBalancerIP: ""
      loadBalancerSourceRanges: []
      nodePorts:
        sbi: ""
      ports:
        sbi: 8000
      sessionAffinity: None
      sessionAffinityConfig: {}
      type: ClusterIP
  sessionAffinity: None
  sidecars: []
  startupProbe:
    enabled: false
    failureThreshold: 5
    initialDelaySeconds: 600
    path: /
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 5
  tolerations: []
  topologySpreadConstraints: []
  updateStrategy:
    type: RollingUpdate
udr:
  affinity: {}
  args: []
  command: []
  commonAnnotations: {}
  commonLabels: {}
  config:
    logger:
      level: info
    mongodb:
      url: ""
    nrfUri: ""
    sbi:
      bindingIPv4: ""
      registerIPv4: ""
  containerPorts:
    sbi: 8000
  containerSecurityContext:
    enabled: true
    runAsNonRoot: true
    runAsUser: 1001
  customLivenessProbe: {}
  customReadinessProbe: {}
  customStartupProbe: {}
  enabled: true
  extraDeploy: []
  extraEnvVars:
  - name: GIN_MODE
    value: release
  extraEnvVarsCM: ""
  extraEnvVarsSecret: ""
  extraVolumeMounts: []
  extraVolumes: []
  fullnameOverride: ""
  global:
    imagePullSecrets: []
    imageRegistry: ""
    storageClass: ""
  hostAliases: []
  image:
    debug: false
    digest: ""
    pullPolicy: IfNotPresent
    pullSecrets: []
    registry: docker.io
    repository: free5gc/udr
    tag: v3.3.0
  initContainers: []
  kubeVersion: ""
  lifecycleHooks: {}
  livenessProbe:
    enabled: true
    failureThreshold: 5
    initialDelaySeconds: 600
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 5
  nameOverride: ""
  namespaceOverride: ""
  nodeAffinityPreset:
    key: ""
    type: ""
    values: []
  nodeSelector: {}
  podAffinityPreset: ""
  podAnnotations: {}
  podAntiAffinityPreset: soft
  podLabels: {}
  podSecurityContext:
    enabled: true
    fsGroup: 1001
  priorityClassName: ""
  readinessProbe:
    enabled: true
    failureThreshold: 5
    initialDelaySeconds: 30
    periodSeconds: 5
    successThreshold: 1
    timeoutSeconds: 1
  replicaCount: 1
  resources:
    limits: {}
    requests: {}
  schedulerName: ""
  serviceAccount:
    annotations: {}
    automountServiceAccountToken: true
    create: false
    name: ""
  services:
    sbi:
      annotations: {}
      clusterIP: ""
      externalTrafficPolicy: Cluster
      extraPorts: []
      loadBalancerIP: ""
      loadBalancerSourceRanges: []
      nodePorts:
        sbi: ""
      ports:
        sbi: 8000
      sessionAffinity: None
      sessionAffinityConfig: {}
      type: ClusterIP
  sessionAffinity: None
  sidecars: []
  startupProbe:
    enabled: false
    failureThreshold: 5
    initialDelaySeconds: 600
    path: /
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 5
  tolerations: []
  topologySpreadConstraints: []
  updateStrategy:
    type: RollingUpdate
upf:
  config:
    dnnList:
    - cidr: 10.60.0.0/24
      dnn: internet
    gtpu:
      ifList:
        name: ""
    logger:
      level: info
    pfcp:
      addr: ""
      nodeID: ""
  enabled: true
  image:
    debug: false
    digest: ""
    pullPolicy: IfNotPresent
    pullSecrets: []
    registry: docker.io
    repository: free5gc/upf
    tag: v3.3.0
upf1:
  affinity: {}
  args: []
  command: []
  commonAnnotations: {}
  commonLabels: {}
  config:
    dnnList:
    - cidr: 10.60.0.0/24
      dnn: internet
    gtpu:
      ifList:
        name: ""
    logger:
      level: info
    pfcp:
      addr: ""
      nodeID: ""
  containerPorts:
    gtpu: 2152
    pfcp: 8805
  containerSecurityContext:
    capabilities:
      add:
      - NET_ADMIN
    enabled: true
    privileged: true
  customLivenessProbe: {}
  customReadinessProbe: {}
  customStartupProbe: {}
  extraDeploy: []
  extraEnvVars:
  - name: GIN_MODE
    value: release
  extraEnvVarsCM: ""
  extraEnvVarsSecret: ""
  extraVolumeMounts: []
  extraVolumes: []
  fullnameOverride: ""
  global:
    imagePullSecrets: []
    imageRegistry: ""
    storageClass: ""
  hostAliases: []
  image:
    debug: false
    digest: ""
    pullPolicy: IfNotPresent
    pullSecrets: []
    registry: docker.io
    repository: free5gc/upf
    tag: v3.3.0
  initContainers: []
  kubeVersion: ""
  lifecycleHooks: {}
  livenessProbe:
    enabled: true
    failureThreshold: 5
    initialDelaySeconds: 600
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 5
  nameOverride: ""
  namespaceOverride: ""
  nodeAffinityPreset:
    key: ""
    type: ""
    values: []
  nodeSelector:
    kubernetes.io/hostname: ubuntu
  podAffinityPreset: ""
  podAnnotations: {}
  podAntiAffinityPreset: soft
  podLabels: {}
  podSecurityContext:
    enabled: true
    fsGroup: 1001
  priorityClassName: ""
  readinessProbe:
    enabled: true
    failureThreshold: 5
    initialDelaySeconds: 30
    periodSeconds: 5
    successThreshold: 1
    timeoutSeconds: 1
  replicaCount: 1
  resources:
    limits: {}
    requests: {}
  schedulerName: ""
  serviceAccount:
    annotations: {}
    automountServiceAccountToken: true
    create: false
    name: ""
  services:
    gtpu:
      annotations: {}
      clusterIP: ""
      externalTrafficPolicy: Cluster
      extraPorts: []
      loadBalancerIP: ""
      loadBalancerSourceRanges: []
      nodePorts:
        gtpu: ""
      ports:
        gtpu: 2152
      sessionAffinity: None
      sessionAffinityConfig: {}
      type: ClusterIP
    pfcp:
      annotations: {}
      clusterIP: ""
      externalTrafficPolicy: Cluster
      extraPorts: []
      loadBalancerIP: ""
      loadBalancerSourceRanges: []
      nodePorts:
        pfcp: ""
      ports:
        pfcp: 8805
      sessionAffinity: None
      sessionAffinityConfig: {}
      type: ClusterIP
  sessionAffinity: None
  sidecars: []
  startupProbe:
    enabled: false
    failureThreshold: 5
    initialDelaySeconds: 600
    path: /
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 5
  tolerations: []
  topologySpreadConstraints: []
  updateStrategy:
    type: RollingUpdate
upf2:
  affinity: {}
  args: []
  command: []
  commonAnnotations: {}
  commonLabels: {}
  config:
    dnnList:
    - cidr: 10.61.0.0/24
      dnn: internet
    gtpu:
      ifList:
        name: ""
    logger:
      level: info
    pfcp:
      addr: ""
      nodeID: ""
  containerPorts:
    gtpu: 2152
    pfcp: 8805
  containerSecurityContext:
    capabilities:
      add:
      - NET_ADMIN
    enabled: true
    privileged: true
  customLivenessProbe: {}
  customReadinessProbe: {}
  customStartupProbe: {}
  enabled: true
  extraDeploy: []
  extraEnvVars:
  - name: GIN_MODE
    value: release
  extraEnvVarsCM: ""
  extraEnvVarsSecret: ""
  extraVolumeMounts: []
  extraVolumes: []
  fullnameOverride: ""
  global:
    imagePullSecrets: []
    imageRegistry: ""
    storageClass: ""
  hostAliases: []
  image:
    debug: false
    digest: ""
    pullPolicy: IfNotPresent
    pullSecrets: []
    registry: docker.io
    repository: free5gc/upf
    tag: v3.3.0
  initContainers: []
  kubeVersion: ""
  lifecycleHooks: {}
  livenessProbe:
    enabled: true
    failureThreshold: 5
    initialDelaySeconds: 600
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 5
  nameOverride: ""
  namespaceOverride: ""
  nodeAffinityPreset:
    key: ""
    type: ""
    values: []
  nodeSelector:
    kubernetes.io/hostname: ubuntu
  podAffinityPreset: ""
  podAnnotations: {}
  podAntiAffinityPreset: soft
  podLabels: {}
  podSecurityContext:
    enabled: true
    fsGroup: 1001
  priorityClassName: ""
  readinessProbe:
    enabled: true
    failureThreshold: 5
    initialDelaySeconds: 30
    periodSeconds: 5
    successThreshold: 1
    timeoutSeconds: 1
  replicaCount: 1
  resources:
    limits: {}
    requests: {}
  schedulerName: ""
  serviceAccount:
    annotations: {}
    automountServiceAccountToken: true
    create: false
    name: ""
  services:
    gtpu:
      annotations: {}
      clusterIP: ""
      externalTrafficPolicy: Cluster
      extraPorts: []
      loadBalancerIP: ""
      loadBalancerSourceRanges: []
      nodePorts:
        gtpu: ""
      ports:
        gtpu: 2152
      sessionAffinity: None
      sessionAffinityConfig: {}
      type: ClusterIP
    pfcp:
      annotations: {}
      clusterIP: ""
      externalTrafficPolicy: Cluster
      extraPorts: []
      loadBalancerIP: ""
      loadBalancerSourceRanges: []
      nodePorts:
        pfcp: ""
      ports:
        pfcp: 8805
      sessionAffinity: None
      sessionAffinityConfig: {}
      type: ClusterIP
  sessionAffinity: None
  sidecars: []
  startupProbe:
    enabled: false
    failureThreshold: 5
    initialDelaySeconds: 600
    path: /
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 5
  tolerations: []
  topologySpreadConstraints: []
  updateStrategy:
    type: RollingUpdate
webui:
  affinity: {}
  args: []
  command: []
  commonAnnotations: {}
  commonLabels: {}
  config:
    billingServer:
      hostIPv4: ""
    logger:
      level: info
    mongodb:
      url: ""
  containerPorts:
    http: 5000
  containerSecurityContext:
    enabled: true
    runAsNonRoot: true
    runAsUser: 1001
  customLivenessProbe: {}
  customReadinessProbe: {}
  customStartupProbe: {}
  enabled: true
  extraDeploy: []
  extraEnvVars:
  - name: GIN_MODE
    value: release
  extraEnvVarsCM: ""
  extraEnvVarsSecret: ""
  extraVolumeMounts: []
  extraVolumes: []
  fullnameOverride: ""
  global:
    imagePullSecrets: []
    imageRegistry: ""
    storageClass: ""
  hostAliases: []
  image:
    debug: false
    digest: ""
    pullPolicy: IfNotPresent
    pullSecrets: []
    registry: docker.io
    repository: free5gc/webui
    tag: v3.3.0
  ingress:
    annotations: {}
    apiVersion: ""
    enabled: true
    extraHosts: []
    extraPaths: []
    extraRules: []
    extraTls: []
    hostname: ""
    ingressClassName: ""
    path: /
    pathType: ImplementationSpecific
    secrets: []
    tls: false
  initContainers: []
  kubeVersion: ""
  lifecycleHooks: {}
  livenessProbe:
    enabled: true
    failureThreshold: 5
    initialDelaySeconds: 600
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 5
  nameOverride: ""
  namespaceOverride: ""
  nodeAffinityPreset:
    key: ""
    type: ""
    values: []
  nodeSelector: {}
  podAffinityPreset: ""
  podAnnotations: {}
  podAntiAffinityPreset: soft
  podLabels: {}
  podSecurityContext:
    enabled: true
    fsGroup: 1001
  priorityClassName: ""
  readinessProbe:
    enabled: true
    failureThreshold: 5
    initialDelaySeconds: 30
    periodSeconds: 5
    successThreshold: 1
    timeoutSeconds: 1
  replicaCount: 1
  resources:
    limits: {}
    requests: {}
  schedulerName: ""
  serviceAccount:
    annotations: {}
    automountServiceAccountToken: true
    create: false
    name: ""
  services:
    http:
      annotations: {}
      clusterIP: ""
      externalTrafficPolicy: Cluster
      extraPorts: []
      loadBalancerIP: ""
      loadBalancerSourceRanges: []
      nodePorts:
        http: "30500"
      ports:
        http: 5000
      sessionAffinity: None
      sessionAffinityConfig: {}
      type: NodePort
  sessionAffinity: None
  sidecars: []
  startupProbe:
    enabled: false
    failureThreshold: 5
    initialDelaySeconds: 600
    path: /
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 5
  tolerations: []
  topologySpreadConstraints: []
  updateStrategy:
    type: RollingUpdate

HOOKS:
MANIFEST:
---
# Source: free5gc/charts/mongodb/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: free5gc-mongodb
  namespace: "free5gc"
  labels:
    app.kubernetes.io/name: mongodb
    helm.sh/chart: mongodb-12.1.31
    app.kubernetes.io/instance: free5gc
    app.kubernetes.io/managed-by: Helm
secrets:
  - name: free5gc-mongodb
automountServiceAccountToken: true
---
# Source: free5gc/charts/amf/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: free5gc-amf
  labels:
    app.kubernetes.io/name: amf
    helm.sh/chart: amf-0.1.0
    app.kubernetes.io/instance: free5gc
    app.kubernetes.io/managed-by: Helm
data:
  amfcfg.yaml: |
    
    
    info:
      version: 1.0.9
      description: AMF initial local configuration
    
    configuration:
      amfName: AMF # the name of this AMF
      ngapIpList:  # the IP list of N2 interfaces on this AMF
        - 0.0.0.0
      ngapPort: 38412 # the SCTP port listened by NGAP
      sbi: # Service-based interface information
        scheme: http # the protocol for sbi (http or https)
        registerIPv4: free5gc-amf-sbi
        bindingIPv4: 0.0.0.0
        port: 8000 # port used to bind the service
        tls: # the local path of TLS key
          pem: cert/amf.pem # AMF TLS Certificate
          key: cert/amf.key # AMF TLS Private key
      serviceNameList: # the SBI services provided by this AMF, refer to TS 29.518
        - namf-comm # Namf_Communication service
        - namf-evts # Namf_EventExposure service
        - namf-mt   # Namf_MT service
        - namf-loc  # Namf_Location service
        - namf-oam  # OAM service
      servedGuamiList:
        -
          amfId: cafe00
          plmnId:
            mcc: 999
            mnc: 70
      supportTaiList:
        -
          plmnId:
            mcc: 999
            mnc: 70
          tac: "000001"
      plmnSupportList:
        -
          plmnId:
            mcc: 999
            mnc: 70
          snssaiList:
          - sd: ffffff
            sst: 1
          - sd: "010203"
            sst: 1
      supportDnnList:  # the DNN (Data Network Name) list supported by this AMF
        -
          internet
        -
          MEC
      nrfUri: http://free5gc-nrf-sbi:8000
      security:  # NAS security parameters
        integrityOrder: # the priority of integrity algorithms
          - NIA2
          - NIA1
          - NIA0
          # - NIA0
        cipheringOrder: # the priority of ciphering algorithms
          - NEA0
          - NEA1
          - NEA2
          # - NEA2
      networkName:  # the name of this core network
        full: Gradiant5G
        short: G5G
      ngapIE: # Optional NGAP IEs
        mobilityRestrictionList: # Mobility Restriction List IE, refer to TS 38.413
          enable: true # append this IE in related message or not
        maskedIMEISV: # Masked IMEISV IE, refer to TS 38.413
          enable: true # append this IE in related message or not
        redirectionVoiceFallback: # Redirection Voice Fallback IE, refer to TS 38.413
          enable: false # append this IE in related message or not
      nasIE: # Optional NAS IEs
        networkFeatureSupport5GS: # 5gs Network Feature Support IE, refer to TS 24.501
          enable: true # append this IE in Registration accept or not
          length: 1 # IE content length (uinteger, range: 1~3)
          imsVoPS: 0 # IMS voice over PS session indicator (uinteger, range: 0~1)
          emc: 0 # Emergency service support indicator for 3GPP access (uinteger, range: 0~3)
          emf: 0 # Emergency service fallback indicator for 3GPP access (uinteger, range: 0~3)
          iwkN26: 0 # Interworking without N26 interface indicator (uinteger, range: 0~1)
          mpsi: 0 # MPS indicator (uinteger, range: 0~1)
          emcN3: 0 # Emergency service support indicator for Non-3GPP access (uinteger, range: 0~1)
          mcsi: 0 # MCS indicator (uinteger, range: 0~1)
      t3502Value: 720  # timer value (seconds) at UE side
      t3512Value: 3600 # timer value (seconds) at UE side
      non3gppDeregTimerValue: 3240 # timer value (seconds) at UE side
      # retransmission timer for paging message
      t3513:
        enable: true     # true or false
        expireTime: 6s   # default is 6 seconds
        maxRetryTimes: 4 # the max number of retransmission
      # retransmission timer for NAS Deregistration Request message
      t3522:
        enable: true     # true or false
        expireTime: 6s   # default is 6 seconds
        maxRetryTimes: 4 # the max number of retransmission
      # retransmission timer for NAS Registration Accept message
      t3550:
        enable: true     # true or false
        expireTime: 6s   # default is 6 seconds
        maxRetryTimes: 4 # the max number of retransmission
      # retransmission timer for NAS Configuration Update Command message
      t3555:
        enable: true     # true or false
        expireTime: 6s   # default is 6 seconds
        maxRetryTimes: 4 # the max number of retransmission
      # retransmission timer for NAS Authentication Request/Security Mode Command message
      t3560:
        enable: true     # true or false
        expireTime: 6s   # default is 6 seconds
        maxRetryTimes: 4 # the max number of retransmission
      # retransmission timer for NAS Notification message
      t3565:
        enable: true     # true or false
        expireTime: 6s   # default is 6 seconds
        maxRetryTimes: 4 # the max number of retransmission
      # retransmission timer for NAS Identity Request message
      t3570:
        enable: true     # true or false
        expireTime: 6s   # default is 6 seconds
        maxRetryTimes: 4 # the max number of retransmission
      locality: area1 # Name of the location where a set of AMF, SMF, PCF and UPFs are located
      sctp: # set the sctp server setting <optinal>, once this field is set, please also add maxInputStream, maxOsStream, maxAttempts, maxInitTimeOut
        numOstreams: 3 # the maximum out streams of each sctp connection
        maxInstreams: 5 # the maximum in streams of each sctp connection
        maxAttempts: 2 # the maximum attempts of each sctp connection
        maxInitTimeout: 2 # the maximum init timeout of each sctp connection
      defaultUECtxReq: false # the default value of UE Context Request to decide when triggering Initial Context Setup procedure
    
    logger: # log output setting
      enable: true # true or false
      level: info # how detailed to output, value: trace, debug, info, warn, error, fatal, panic
      reportCaller: false # enable the caller report or not, value: true or false
---
# Source: free5gc/charts/ausf/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: free5gc-ausf
  labels:
    app.kubernetes.io/name: ausf
    helm.sh/chart: ausf-0.1.0
    app.kubernetes.io/instance: free5gc
    app.kubernetes.io/managed-by: Helm
data:
  ausfcfg.yaml: |
    
    
    info:
      version: 1.0.3
      description: AUSF initial local configuration
    
    configuration:
      sbi: # Service-based interface information
        scheme: http # the protocol for sbi (http or https)
        registerIPv4: free5gc-ausf-sbi
        bindingIPv4: 0.0.0.0
        port: 8000 # Port used to bind the service
        tls: # the local path of TLS key
          pem: cert/ausf.pem # AUSF TLS Certificate
          key: cert/ausf.key # AUSF TLS Private key
      serviceNameList: # the SBI services provided by this AUSF, refer to TS 29.509
        - nausf-auth # Nausf_UEAuthentication service
      nrfUri: http://free5gc-nrf-sbi:8000
      plmnSupportList:
        -
          mcc: 999
          mnc: 70
      groupId: ausfGroup001 # ID for the group of the AUSF
      eapAkaSupiImsiPrefix: false # including "imsi-" prefix or not when using the SUPI to do EAP-AKA' authentication
    
    logger: # log output setting
      enable: true # true or false
      level: info  # how detailed to output, value: trace, debug, info, warn, error, fatal, panic
      reportCaller: false # enable the caller report or not, value: true or false
---
# Source: free5gc/charts/chf/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: free5gc-chf
  labels:
    app.kubernetes.io/name: chf
    helm.sh/chart: chf-0.1.0
    app.kubernetes.io/instance: free5gc
    app.kubernetes.io/managed-by: Helm
data:
  chfcfg.yaml: |
    
    
    info:
      version: 1.0.3
      description: CHF initial local configuration
    
    configuration:
      chfName: CHF # the name of this CHF
      sbi: # Service-based interface information
        scheme: http # the protocol for sbi (http or https)
        registerIPv4: free5gc-chf-sbi
        bindingIPv4: 0.0.0.0
        port: 8000              # port used to bind the service
        tls: # the local path of TLS key
          pem: cert/chf.pem # CHF TLS Certificate
          key: cert/chf.key # CHF TLS Private key
      nrfUri: http://free5gc-nrf-sbi:8000
      serviceNameList:   # the SBI services provided by this CHF, refer to TS 32.291
        - nchf-convergedcharging # Nchf_AMPolicyControl service
      mongodb:       # the mongodb connected by this CHF
        name: free5gc                  # name of the mongodb
        url: mongodb://free5gc-mongodb:27017  # a valid URL of the mongodb    
      quotaValidityTime: 10000
      volumeLimit: 50000
      volumeLimitPDU: 10000
      volumeThresholdRate: 0.8
      cgf:
        hostIPv4: free5gc-free5gc.lab5g.gradiant.org
        port: 2122
        listenPort: 2121
        tls:
          pem: cert/chf.pem
          key: cert/chf.key
      abmfDiameter:
        protocol: tcp 
        hostIPv4: 127.0.0.133
        port: 3868
        tls:
          pem: cert/chf.pem
          key: cert/chf.key
      rfDiameter: 
        protocol: tcp
        hostIPv4: 127.0.0.133
        port: 3869
        tls:
          pem: cert/chf.pem # CHF TLS Certificate
          key: cert/chf.key # CHF TLS Private key
    logger: # log output setting
      enable: true # true or false
      level: info # how detailed to output, value: trace, debug, info, warn, error, fatal, panic
      reportCaller: false # enable the caller report or not, value: true or false
---
# Source: free5gc/charts/mongodb/templates/common-scripts-cm.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: free5gc-mongodb-common-scripts
  namespace: "free5gc"
  labels:
    app.kubernetes.io/name: mongodb
    helm.sh/chart: mongodb-12.1.31
    app.kubernetes.io/instance: free5gc
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: mongodb
data:
  startup-probe.sh: |
    #!/bin/bash
    mongosh  $TLS_OPTIONS --port $MONGODB_PORT_NUMBER --eval 'db.hello().isWritablePrimary || db.hello().secondary' | grep -q 'true'
  readiness-probe.sh: |
    #!/bin/bash
    # Run the proper check depending on the version
    [[ $(mongod -version | grep "db version") =~ ([0-9]+\.[0-9]+\.[0-9]+) ]] && VERSION=${BASH_REMATCH[1]}
    . /opt/bitnami/scripts/libversion.sh
    VERSION_MAJOR="$(get_sematic_version "$VERSION" 1)"
    VERSION_MINOR="$(get_sematic_version "$VERSION" 2)"
    VERSION_PATCH="$(get_sematic_version "$VERSION" 3)"
    if [[ ( "$VERSION_MAJOR" -ge 5 ) || ( "$VERSION_MAJOR" -ge 4 && "$VERSION_MINOR" -ge 4 && "$VERSION_PATCH" -ge 2 ) ]]; then
        mongosh $TLS_OPTIONS --port $MONGODB_PORT_NUMBER --eval 'db.hello().isWritablePrimary || db.hello().secondary' | grep -q 'true'
    else
        mongosh  $TLS_OPTIONS --port $MONGODB_PORT_NUMBER --eval 'db.isMaster().ismaster || db.isMaster().secondary' | grep -q 'true'
    fi
  ping-mongodb.sh: |
    #!/bin/bash
    mongosh  $TLS_OPTIONS --port $MONGODB_PORT_NUMBER --eval "db.adminCommand('ping')"
---
# Source: free5gc/charts/nrf/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: free5gc-nrf
  labels:
    app.kubernetes.io/name: nrf
    helm.sh/chart: nrf-0.1.0
    app.kubernetes.io/instance: free5gc
    app.kubernetes.io/managed-by: Helm
data:
  nrfcfg.yaml: |
    
    
    info:
      version: 1.0.2
      description: NRF initial local configuration
    
    configuration:
      MongoDBName: free5gc # database name in MongoDB
      MongoDBUrl: mongodb://free5gc-mongodb:27017  # a valid URL of the mongodb
      sbi: # Service-based interface information
        scheme: http # the protocol for sbi (http or https)
        registerIPv4: free5gc-nrf-sbi
        bindingIPv4: 0.0.0.0
        port: 8000 # port used to bind the service
        tls: # the local path of TLS key
          pem: cert/nrf.pem # NRF TLS Certificate
          key: cert/nrf.key # NRF TLS Private key
      DefaultPlmnId:
        mcc: 999 # Mobile Country Code (3 digits string, digit: 0~9)
        mnc: 70 # Mobile Network Code (2 or 3 digits string, digit: 0~9)
      serviceNameList: # the SBI services provided by this NRF, refer to TS 29.510
        - nnrf-nfm # Nnrf_NFManagement service
        - nnrf-disc # Nnrf_NFDiscovery service
    
    logger: # log output setting
      enable: true # true or false
      level: info  # how detailed to output, value: trace, debug, info, warn, error, fatal, panic
      reportCaller: false # enable the caller report or not, value: true or false
---
# Source: free5gc/charts/nssf/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: free5gc-nssf
  labels:
    app.kubernetes.io/name: nssf
    helm.sh/chart: nssf-0.1.0
    app.kubernetes.io/instance: free5gc
    app.kubernetes.io/managed-by: Helm
data:
  nssfcfg.yaml: |
    
    
    info:
      version: 1.0.2
      description: NSSF initial local configuration
    
    configuration:
      nssfName: NSSF # the name of this NSSF
      sbi: # Service-based interface information
        scheme: http # the protocol for sbi (http or https)
        registerIPv4: free5gc-nssf-sbi
        bindingIPv4: 0.0.0.0
        port: 8000 # Port used to bind the service
        tls: # the local path of TLS key
          pem: cert/nssf.pem # NSSF TLS Certificate
          key: cert/nssf.key # NSSF TLS Private key
      serviceNameList: # the SBI services provided by this SMF, refer to TS 29.531
        - nnssf-nsselection # Nnssf_NSSelection service
        - nnssf-nssaiavailability # Nnssf_NSSAIAvailability service
      nrfUri: http://free5gc-nrf-sbi:8000
      supportedPlmnList:
        -
          mcc: 999
          mnc: 70
      supportedNssaiInPlmnList:
        -
          plmnId:
            mcc: 999
            mnc: 70
          supportedSnssaiList:
          - sd: ffffff
            sst: 1
          - sd: "010203"
            sst: 1
      nsiList:
        -
          nsiInformationList:
          - nrfId: http://free5gc-nrf-sbi:8000/nnrf-nfm/v1/nf-instances
            nsiId: 10
          snssai:
            sd: ffffff
            sst: 1
      amfSetList: # List of AMF Sets that my be assigned by this NSSF
        - amfSetId: 1 # the AMF Set identifier
          amfList: # Instance ID of the AMFs in this set
            - ffa2e8d7-3275-49c7-8631-6af1df1d9d26
            - 0e8831c3-6286-4689-ab27-1e2161e15cb1
            - a1fba9ba-2e39-4e22-9c74-f749da571d0d
          # URI of the NRF used to determine the list of candidate AMF(s) from the AMF Set
          nrfAmfSet: http://nrf.free5gc.org:8000/nnrf-nfm/v1/nf-instances
          # the Nssai availability data information per TA supported by the AMF
          supportedNssaiAvailabilityData:
            - tai: # Tracking Area Identifier
                plmnId: # Public Land Mobile Network ID, <PLMN ID> = <MCC><MNC>
                  mcc: 466 # Mobile Country Code (3 digits string, digit: 0~9)
                  mnc: 92 # Mobile Network Code (2 or 3 digits string, digit: 0~9)
                tac: 33456 # Tracking Area Code (uinteger, range: 0~16777215)
              supportedSnssaiList: # Supported S-NSSAIs of the tracking area
                - sst: 1 # Slice/Service Type (uinteger, range: 0~255)
                  sd: 000001 # Slice Differentiator (3 bytes hex string, range: 000000~FFFFFF)
                - sst: 1 # Slice/Service Type (uinteger, range: 0~255)
                  sd: 000002 # Slice Differentiator (3 bytes hex string, range: 000000~FFFFFF)
                - sst: 2 # Slice/Service Type (uinteger, range: 0~255)
                  sd: 000001 # Slice Differentiator (3 bytes hex string, range: 000000~FFFFFF)
            - tai: # Tracking Area Identifier
                plmnId: # Public Land Mobile Network ID, <PLMN ID> = <MCC><MNC>
                  mcc: 466 # Mobile Country Code (3 digits string, digit: 0~9)
                  mnc: 92 # Mobile Network Code (2 or 3 digits string, digit: 0~9)
                tac: 33457 # Tracking Area Code (uinteger, range: 0~16777215)
              supportedSnssaiList: # Supported S-NSSAIs of the tracking area
                - sst: 1 # Slice/Service Type (uinteger, range: 0~255)
                - sst: 1 # Slice/Service Type (uinteger, range: 0~255)
                  sd: 000001 # Slice Differentiator (3 bytes hex string, range: 000000~FFFFFF)
                - sst: 1 # Slice/Service Type (uinteger, range: 0~255)
                  sd: 000002 # Slice Differentiator (3 bytes hex string, range: 000000~FFFFFF)
        - amfSetId: 2 # the AMF Set identifier
          # URI of the NRF used to determine the list of candidate AMF(s) from the AMF Set
          nrfAmfSet: http://nrf.free5gc.org:8084/nnrf-nfm/v1/nf-instances
          # the Nssai availability data information per TA supported by the AMF
          supportedNssaiAvailabilityData:
            - tai: # Tracking Area Identifier
                plmnId: # Public Land Mobile Network ID, <PLMN ID> = <MCC><MNC>
                  mcc: 466 # Mobile Country Code (3 digits string, digit: 0~9)
                  mnc: 92 # Mobile Network Code (2 or 3 digits string, digit: 0~9)
                tac: 33456 # Tracking Area Code (uinteger, range: 0~16777215)
              supportedSnssaiList: # Supported S-NSSAIs of the tracking area
                - sst: 1 # Slice/Service Type (uinteger, range: 0~255)
                - sst: 1 # Slice/Service Type (uinteger, range: 0~255)
                  sd: 000001 # Slice Differentiator (3 bytes hex string, range: 000000~FFFFFF)
                - sst: 1 # Slice/Service Type (uinteger, range: 0~255)
                  sd: 000003 # Slice Differentiator (3 bytes hex string, range: 000000~FFFFFF)
                - sst: 2 # Slice/Service Type (uinteger, range: 0~255)
                  sd: 000001 # Slice Differentiator (3 bytes hex string, range: 000000~FFFFFF)
            - tai: # Tracking Area Identifier
                plmnId: # Public Land Mobile Network ID, <PLMN ID> = <MCC><MNC>
                  mcc: 466 # Mobile Country Code (3 digits string, digit: 0~9)
                  mnc: 92 # Mobile Network Code (2 or 3 digits string, digit: 0~9)
                tac: 33458 # Tracking Area Code (uinteger, range: 0~16777215)
              supportedSnssaiList: # Supported S-NSSAIs of the tracking area
                - sst: 1 # Slice/Service Type (uinteger, range: 0~255)
                - sst: 1 # Slice/Service Type (uinteger, range: 0~255)
                  sd: 000001 # Slice Differentiator (3 bytes hex string, range: 000000~FFFFFF)
                - sst: 2 # Slice/Service Type (uinteger, range: 0~255)
      amfList: # List of AMFs that may be assigned by this NSSF
        - nfId: 469de254-2fe5-4ca0-8381-af3f500af77c # ID of this AMF
          # The NSSAI availability data information per TA supported by the AMF
          supportedNssaiAvailabilityData:
            - tai: # Tracking Area Identifier
                plmnId: # Public Land Mobile Network ID, <PLMN ID> = <MCC><MNC>
                  mcc: 466 # Mobile Country Code (3 digits string, digit: 0~9)
                  mnc: 92 # Mobile Network Code (2 or 3 digits string, digit: 0~9)
                tac: 33456 # Tracking Area Code (uinteger, range: 0~16777215)
              supportedSnssaiList: # Supported S-NSSAIs of the tracking area
                - sst: 1 # Slice/Service Type (uinteger, range: 0~255)
                - sst: 1 # Slice/Service Type (uinteger, range: 0~255)
                  sd: 000002 # Slice Differentiator (3 bytes hex string, range: 000000~FFFFFF)
                - sst: 2 # Slice/Service Type (uinteger, range: 0~255)
            - tai: # Tracking Area Identifier
                plmnId: # Public Land Mobile Network ID, <PLMN ID> = <MCC><MNC>
                  mcc: 466 # Mobile Country Code (3 digits string, digit: 0~9)
                  mnc: 92 # Mobile Network Code (2 or 3 digits string, digit: 0~9)
                tac: 33457 # Tracking Area Code (uinteger, range: 0~16777215)
              supportedSnssaiList: # Supported S-NSSAIs of the tracking area
                - sst: 1 # Slice/Service Type (uinteger, range: 0~255)
                  sd: 000001 # Slice Differentiator (3 bytes hex string, range: 000000~FFFFFF)
                - sst: 1 # Slice/Service Type (uinteger, range: 0~255)
                  sd: 000002 # Slice Differentiator (3 bytes hex string, range: 000000~FFFFFF)
        - nfId: fbe604a8-27b2-417e-bd7c-8a7be2691f8d # ID of this AMF
          # The NSSAI availability data information per TA supported by the AMF
          supportedNssaiAvailabilityData:
            - tai: # Tracking Area Identifier
                plmnId: # Public Land Mobile Network ID, <PLMN ID> = <MCC><MNC>
                  mcc: 466 # Mobile Country Code (3 digits string, digit: 0~9)
                  mnc: 92 # Mobile Network Code (2 or 3 digits string, digit: 0~9)
                tac: 33458 # Tracking Area Code (uinteger, range: 0~16777215)
              supportedSnssaiList: # Supported S-NSSAIs of the tracking area
                - sst: 1 # Slice/Service Type (uinteger, range: 0~255)
                - sst: 1 # Slice/Service Type (uinteger, range: 0~255)
                  sd: 000001 # Slice Differentiator (3 bytes hex string, range: 000000~FFFFFF)
                - sst: 1 # Slice/Service Type (uinteger, range: 0~255)
                  sd: 000003 # Slice Differentiator (3 bytes hex string, range: 000000~FFFFFF)
                - sst: 2 # Slice/Service Type (uinteger, range: 0~255)
            - tai: # Tracking Area Identifier
                plmnId: # Public Land Mobile Network ID, <PLMN ID> = <MCC><MNC>
                  mcc: 466 # Mobile Country Code (3 digits string, digit: 0~9)
                  mnc: 92 # Mobile Network Code (2 or 3 digits string, digit: 0~9)
                tac: 33459 # Tracking Area Code (uinteger, range: 0~16777215)
              supportedSnssaiList: # Supported S-NSSAIs of the tracking area
                - sst: 1 # Slice/Service Type (uinteger, range: 0~255)
                - sst: 1 # Slice/Service Type (uinteger, range: 0~255)
                  sd: 000001 # Slice Differentiator (3 bytes hex string, range: 000000~FFFFFF)
                - sst: 2 # Slice/Service Type (uinteger, range: 0~255)
                - sst: 2 # Slice/Service Type (uinteger, range: 0~255)
                  sd: 000001 # Slice Differentiator (3 bytes hex string, range: 000000~FFFFFF)
        - nfId: b9e6e2cb-5ce8-4cb6-9173-a266dd9a2f0c # ID of this AMF
          # The NSSAI availability data information per TA supported by the AMF
          supportedNssaiAvailabilityData:
            - tai: # Tracking Area Identifier
                plmnId: # Public Land Mobile Network ID, <PLMN ID> = <MCC><MNC>
                  mcc: 466 # Mobile Country Code (3 digits string, digit: 0~9)
                  mnc: 92 # Mobile Network Code (2 or 3 digits string, digit: 0~9)
                tac: 33456 # Tracking Area Code (uinteger, range: 0~16777215)
              supportedSnssaiList: # Supported S-NSSAIs of the tracking area
                - sst: 1 # Slice/Service Type (uinteger, range: 0~255)
                - sst: 1 # Slice/Service Type (uinteger, range: 0~255)
                  sd: 000001 # Slice Differentiator (3 bytes hex string, range: 000000~FFFFFF)
                - sst: 1 # Slice/Service Type (uinteger, range: 0~255)
                  sd: 000002 # Slice Differentiator (3 bytes hex string, range: 000000~FFFFFF)
                - sst: 2 # Slice/Service Type (uinteger, range: 0~255)
            - tai: # Tracking Area Identifier
                plmnId: # Public Land Mobile Network ID, <PLMN ID> = <MCC><MNC>
                  mcc: 466 # Mobile Country Code (3 digits string, digit: 0~9)
                  mnc: 92 # Mobile Network Code (2 or 3 digits string, digit: 0~9)
                tac: 33458 # Tracking Area Code (uinteger, range: 0~16777215)
              supportedSnssaiList: # Supported S-NSSAIs of the tracking area
                - sst: 1 # Slice/Service Type (uinteger, range: 0~255)
                - sst: 1 # Slice/Service Type (uinteger, range: 0~255)
                  sd: 000001 # Slice Differentiator (3 bytes hex string, range: 000000~FFFFFF)
                - sst: 2 # Slice/Service Type (uinteger, range: 0~255)
                - sst: 2 # Slice/Service Type (uinteger, range: 0~255)
                  sd: 000001 # Slice Differentiator (3 bytes hex string, range: 000000~FFFFFF)
      taList: # List of supported tracking area and their related information of this NSSF instance
        - tai: # Tracking Area Identity
            plmnId: # Public Land Mobile Network ID, <PLMN ID> = <MCC><MNC>
              mcc: 466 # Mobile Country Code (3 digits string, digit: 0~9)
              mnc: 92 # Mobile Network Code (2 or 3 digits string, digit: 0~9)
            tac: 33456 # Tracking Area Code (uinteger, range: 0~16777215)
          accessType: 3GPP_ACCESS # Access type of the tracking area
          supportedSnssaiList: # List of supported S-NSSAIs of the tracking area
            - sst: 1 # Slice/Service Type (uinteger, range: 0~255)
            - sst: 1 # Slice/Service Type (uinteger, range: 0~255)
              sd: 000001 # Slice Differentiator (3 bytes hex string, range: 000000~FFFFFF)
            - sst: 1 # Slice/Service Type (uinteger, range: 0~255)
              sd: 000002 # Slice Differentiator (3 bytes hex string, range: 000000~FFFFFF)
            - sst: 2 # Slice/Service Type (uinteger, range: 0~255)
        - tai: # Tracking Area Identity
            plmnId: # Public Land Mobile Network ID, <PLMN ID> = <MCC><MNC>
              mcc: 466 # Mobile Country Code (3 digits string, digit: 0~9)
              mnc: 92 # Mobile Network Code (2 or 3 digits string, digit: 0~9)
            tac: 33457 # Tracking Area Code (uinteger, range: 0~16777215)
          accessType: 3GPP_ACCESS # Access type of the tracking area
          supportedSnssaiList: # List of supported S-NSSAIs of the tracking area
            - sst: 1 # Slice/Service Type (uinteger, range: 0~255)
            - sst: 1 # Slice/Service Type (uinteger, range: 0~255)
              sd: 000001 # Slice Differentiator (3 bytes hex string, range: 000000~FFFFFF)
            - sst: 1 # Slice/Service Type (uinteger, range: 0~255)
              sd: 000002 # Slice Differentiator (3 bytes hex string, range: 000000~FFFFFF)
            - sst: 2 # Slice/Service Type (uinteger, range: 0~255)
        - tai: # Tracking Area Identifier
            plmnId: # Public Land Mobile Network ID, <PLMN ID> = <MCC><MNC>
              mcc: 466 # Mobile Country Code (3 digits string, digit: 0~9)
              mnc: 92 # Mobile Network Code (2 or 3 digits string, digit: 0~9)
            tac: 33458 # Tracking Area Code (uinteger, range: 0~16777215)
          accessType: 3GPP_ACCESS # Access type of the tracking area
          supportedSnssaiList: # List of supported S-NSSAIs of the tracking area
            - sst: 1 # Slice/Service Type (uinteger, range: 0~255)
            - sst: 1 # Slice/Service Type (uinteger, range: 0~255)
              sd: 000001 # Slice Differentiator (3 bytes hex string, range: 000000~FFFFFF)
            - sst: 1 # Slice/Service Type (uinteger, range: 0~255)
              sd: 000003 # Slice Differentiator (3 bytes hex string, range: 000000~FFFFFF)
            - sst: 2 # Slice/Service Type (uinteger, range: 0~255)
          restrictedSnssaiList: # List of restricted S-NSSAIs of the tracking area
            - homePlmnId: # Home PLMN identifier
                mcc: 310 # Mobile Country Code (3 digits string, digit: 0~9)
                mnc: 560 # Mobile Network Code (2 or 3 digits string, digit: 0~9)
              sNssaiList: # the S-NSSAIs List
                - sst: 1 # Slice/Service Type (uinteger, range: 0~255)
                  sd: 000003 # Slice Differentiator (3 bytes hex string, range: 000000~FFFFFF)
        - tai: # Tracking Area Identifier
            plmnId: # Public Land Mobile Network ID, <PLMN ID> = <MCC><MNC>
              mcc: 466 # Mobile Country Code (3 digits string, digit: 0~9)
              mnc: 92 # Mobile Network Code (2 or 3 digits string, digit: 0~9)
            tac: 33459 # Tracking Area Code (uinteger, range: 0~16777215)
          accessType: 3GPP_ACCESS # Access type of the tracking area
          supportedSnssaiList: # List of supported S-NSSAIs of the tracking area
            - sst: 1 # Slice/Service Type (uinteger, range: 0~255)
            - sst: 1 # Slice/Service Type (uinteger, range: 0~255)
              sd: 000001 # Slice Differentiator (3 bytes hex string, range: 000000~FFFFFF)
            - sst: 2 # Slice/Service Type (uinteger, range: 0~255)
            - sst: 2 # Slice/Service Type (uinteger, range: 0~255)
              sd: 000001 # Slice Differentiator (3 bytes hex string, range: 000000~FFFFFF)
          restrictedSnssaiList: # List of restricted S-NSSAIs of the tracking area
            - homePlmnId: # Home PLMN identifier
                mcc: 310 # Mobile Country Code (3 digits string, digit: 0~9)
                mnc: 560 # Mobile Network Code (2 or 3 digits string, digit: 0~9)
              sNssaiList: # the S-NSSAIs List
                - sst: 2 # Slice/Service Type (uinteger, range: 0~255)
                  sd: 000001 # Slice Differentiator (3 bytes hex string, range: 000000~FFFFFF)
      # List of mappings of S-NSSAI in the serving network and the value of the home network
      mappingListFromPlmn:
        - operatorName: NTT Docomo # Home PLMN name
          homePlmnId: # Home PLMN identifier
            mcc: 440 # Mobile Country Code (3 digits string, digit: 0~9)
            mnc: 10 # Mobile Network Code (2 or 3 digits string, digit: 0~9)
          mappingOfSnssai: # List of S-NSSAIs mapping
            - servingSnssai: # S-NSSAI in the serving network
                sst: 1 # Slice/Service Type (uinteger, range: 0~255)
                sd: 000001 # Slice Differentiator (3 bytes hex string, range: 000000~FFFFFF)
              homeSnssai: # S-NSSAI in the home network
                sst: 1 # Slice/Service Type (uinteger, range: 0~255)
                sd: 1 # Slice Differentiator (3 bytes hex string, range: 000000~FFFFFF)
            - servingSnssai: # S-NSSAI in the serving network
                sst: 1 # Slice/Service Type (uinteger, range: 0~255)
                sd: 000002 # Slice Differentiator (3 bytes hex string, range: 000000~FFFFFF)
              homeSnssai: # S-NSSAI in the home network
                sst: 1 # Slice/Service Type (uinteger, range: 0~255)
                sd: 000003 # Slice Differentiator (3 bytes hex string, range: 000000~FFFFFF)
            - servingSnssai: # S-NSSAI in the serving network
                sst: 1 # Slice/Service Type (uinteger, range: 0~255)
                sd: 000003 # Slice Differentiator (3 bytes hex string, range: 000000~FFFFFF)
              homeSnssai: # S-NSSAI in the home network
                sst: 1 # Slice/Service Type (uinteger, range: 0~255)
                sd: 000004 # Slice Differentiator (3 bytes hex string, range: 000000~FFFFFF)
            - servingSnssai: # S-NSSAI in the serving network
                sst: 2 # Slice/Service Type (uinteger, range: 0~255)
                sd: 000001 # Slice Differentiator (3 bytes hex string, range: 000000~FFFFFF)
              homeSnssai: # S-NSSAI in the home network
                sst: 2 # Slice/Service Type (uinteger, range: 0~255)
                sd: 000002 # Slice Differentiator (3 bytes hex string, range: 000000~FFFFFF)
        - operatorName: AT&T Mobility # Home PLMN name
          homePlmnId: # Home PLMN identifier
            mcc: 310 # Mobile Country Code (3 digits string, digit: 0~9)
            mnc: 560 # Mobile Network Code (2 or 3 digits string, digit: 0~9)
          mappingOfSnssai:
            - servingSnssai: # S-NSSAI in the serving network
                sst: 1 # Slice/Service Type (uinteger, range: 0~255)
                sd: 000001 # Slice Differentiator (3 bytes hex string, range: 000000~FFFFFF)
              homeSnssai: # S-NSSAI in the home network
                sst: 1 # Slice/Service Type (uinteger, range: 0~255)
                sd: 000002 # Slice Differentiator (3 bytes hex string, range: 000000~FFFFFF)
            - servingSnssai: # S-NSSAI in the serving network
                sst: 1 # Slice/Service Type (uinteger, range: 0~255)
                sd: 000002 # Slice Differentiator (3 bytes hex string, range: 000000~FFFFFF)
              homeSnssai: # S-NSSAI in the home network
                sst: 1 # Slice/Service Type (uinteger, range: 0~255)
                sd: 000003 # Slice Differentiator (3 bytes hex string, range: 000000~FFFFFF)
    
    logger: # log output setting
      enable: true # true or false
      level: info # how detailed to output, value: trace, debug, info, warn, error, fatal, panic
      reportCaller: false # enable the caller report or not, value: true or false
---
# Source: free5gc/charts/pcf/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: free5gc-pcf
  labels:
    app.kubernetes.io/name: pcf
    helm.sh/chart: pcf-0.1.0
    app.kubernetes.io/instance: free5gc
    app.kubernetes.io/managed-by: Helm
data:
  pcfcfg.yaml: |
    
    
    info:
      version: 1.0.2
      description: PCF initial local configuration
    
    configuration:
      pcfName: PCF # the name of this PCF
      sbi: # Service-based interface information
        scheme: http # the protocol for sbi (http or https)
        registerIPv4: free5gc-pcf-sbi
        bindingIPv4: 0.0.0.0
        port: 8000              # port used to bind the service
        tls: # the local path of TLS key
          pem: cert/pcf.pem # PCF TLS Certificate
          key: cert/pcf.key # PCF TLS Private key
      timeFormat: 2019-01-02 15:04:05 # time format of this PCF
      defaultBdtRefId: BdtPolicyId-   # BDT Reference ID, indicating transfer policies of background data transfer.
      nrfUri: http://free5gc-nrf-sbi:8000
      serviceList:   # the SBI services provided by this PCF, refer to TS 29.507
        - serviceName: npcf-am-policy-control # Npcf_AMPolicyControl service
        - serviceName: npcf-smpolicycontrol   # Npcf_SMPolicyControl service
          suppFeat: 3fff # the features supported by Npcf_SMPolicyControl, name defined in TS 29.512 5.8-1, value defined in TS 29.571 5.2.2
        - serviceName: npcf-bdtpolicycontrol    # Npcf_BDTPolicyControl service
        - serviceName: npcf-policyauthorization # Npcf_PolicyAuthorization service
          suppFeat: 3    # the features supported by Npcf_PolicyAuthorization, name defined in TS 29.514 5.8-1, value defined in TS 29.571 5.2.2
        - serviceName: npcf-eventexposure       # Npcf_EventExposure service
        - serviceName: npcf-ue-policy-control   # Npcf_UEPolicyControl service
      mongodb:       # the mongodb connected by this PCF
        name: free5gc                  # name of the mongodb
        url: mongodb://free5gc-mongodb:27017  # a valid URL of the mongodb   
      locality: area1 # Name of the location where a set of AMF, SMF, PCF and UPFs are located
    
    logger: # log output setting
      enable: true # true or false
      level: info # how detailed to output, value: trace, debug, info, warn, error, fatal, panic
      reportCaller: false # enable the caller report or not, value: true or false
---
# Source: free5gc/charts/smf1/templates/configmap-uerouting.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: free5gc-smf1-uerouting
  labels:
    app.kubernetes.io/name: smf1
    helm.sh/chart: smf1-0.1.0
    app.kubernetes.io/instance: free5gc
    app.kubernetes.io/managed-by: Helm
data:
  uerouting.yaml: |
    info:
      version: 1.0.7
      description: Routing information for UE
    
    ueRoutingInfo: # the list of UE routing information
      UE1: # Group Name
        members:
        - imsi-208930000007487 # Subscription Permanent Identifier of the UE
        topology: # Network topology for this group (Uplink: A->B, Downlink: B->A)
        # default path derived from this topology
        # node name should be consistent with smfcfg.yaml
          - A: gNB1
            B: BranchingUPF
          - A: BranchingUPF
            B: AnchorUPF1
        specificPath:
          - dest: 10.60.0.103/32 # the destination IP address on Data Network (DN)
            # the order of UPF nodes in this path. We use the UPF's name to represent each UPF node.
            # The UPF's name should be consistent with smfcfg.yaml
            path: [BranchingUPF, AnchorUPF2]
    
      UE2: # Group Name
        members:
        - imsi-208930000007486 # Subscription Permanent Identifier of the UE
        topology: # Network topology for this group (Uplink: A->B, Downlink: B->A)
        # default path derived from this topology
        # node name should be consistent with smfcfg.yaml
          - A: gNB1
            B: BranchingUPF
          - A: BranchingUPF
            B: AnchorUPF1
        specificPath:
          - dest: 10.0.0.11/32 # the destination IP address on Data Network (DN)
            # the order of UPF nodes in this path. We use the UPF's name to represent each UPF node.
            # The UPF's name should be consistent with smfcfg.yaml
            path: [BranchingUPF, AnchorUPF2]
    
    routeProfile: # Maintains the mapping between RouteProfileID and ForwardingPolicyID of UPF
      MEC1: # Route Profile identifier
        forwardingPolicyID: 10 # Forwarding Policy ID of the route profile
    
    pfdDataForApp: # PFDs for an Application
      - applicationId: edge # Application identifier
        pfds: # PFDs for the Application
          - pfdID: pfd1 # PFD identifier
            flowDescriptions: # Represents a 3-tuple with protocol, server ip and server port for UL/DL application traffic
              - permit out ip from 10.60.0.1 8080 to any
---
# Source: free5gc/charts/smf1/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: free5gc-smf1
  labels:
    app.kubernetes.io/name: smf1
    helm.sh/chart: smf1-0.1.0
    app.kubernetes.io/instance: free5gc
    app.kubernetes.io/managed-by: Helm
data:
  smfcfg.yaml: |
    
    info:
      version: 1.0.7
      description: SMF initial local configuration
    
    configuration:
      smfName: SMF # the name of this SMF
      sbi: # Service-based interface information
        scheme: http # the protocol for sbi (http or https)
        registerIPv4: free5gc-smf1-sbi
        bindingIPv4: 0.0.0.0
        port: 8000 # Port used to bind the service
        tls: # the local path of TLS key
          key: cert/smf.key # SMF TLS Certificate
          pem: cert/smf.pem # SMF TLS Private key
      serviceNameList: # the SBI services provided by this SMF, refer to TS 29.502
        - nsmf-pdusession # Nsmf_PDUSession service
        - nsmf-event-exposure # Nsmf_EventExposure service
        - nsmf-oam # OAM service
      snssaiInfos:
        -
          dnnInfos:
          - dnn: internet
            dns:
              ipv4: 8.8.8.8
              ipv6: 2001:4860:4860::8888
          sNssai:
            sd: ffffff
            sst: 1
      plmnList:
        -
          mcc: 999
          mnc: 70
      locality: area1 # Name of the location where a set of AMF, SMF, PCF and UPFs are located
      pfcp: # the IP address of N4 interface on this SMF (PFCP)
        # addr config is deprecated in smf config v1.0.3, please use the following config
        nodeID: free5gc-smf1-pfcp # the Node ID of this SMF
        listenAddr: 0.0.0.0 # the IP/FQDN of N4 interface on this SMF (PFCP)
        externalAddr: free5gc-smf1-pfcp # the IP/FQDN of N4 interface on this SMF (PFCP)
      userplaneInformation: # list of userplane information
        upNodes: # information of userplane node (AN or UPF)
          gNB1: # the name of the node
            type: AN # the type of the node (AN or UPF)
          UPF: # the name of the node
            type: UPF # the type of the node (AN or UPF)
            nodeID: free5gc-upf1-pfcp # the Node ID of this UPF
            addr: free5gc-upf1-pfcp # the IP/FQDN of N4 interface on this UPF (PFCP)
            sNssaiUpfInfos:  # S-NSSAI information list for this UPF
              -
                dnnUpfInfoList:
                - dnn: internet
                  pools:
                  - cidr: 10.60.0.0/16
                  staticPools:
                  - cidr: 10.60.100.0/24
                sNssai:
                  sd: ffffff
                  sst: 1
            interfaces: # Interface list for this UPF
              - interfaceType: N3 # the type of the interface (N3 or N9)
                endpoints: # the IP address of this N3/N9 interface on this UPF
                  - free5gc-upf1-gtpu
                networkInstances:  # Data Network Name (DNN)
                  - internet
        links: # the topology graph of userplane, A and B represent the two nodes of each link
          - A: gNB1
            B: UPF
      # retransmission timer for pdu session modification command
      t3591:
        enable: true     # true or false
        expireTime: 16s   # default is 6 seconds
        maxRetryTimes: 3 # the max number of retransmission
      # retransmission timer for pdu session release command
      t3592:
        enable: true     # true or false
        expireTime: 16s   # default is 6 seconds
        maxRetryTimes: 3 # the max number of retransmission
      nrfUri: http://free5gc-nrf-sbi:8000
      #urrPeriod: 10 # default usage report period in seconds
      #urrThreshold: 1000 # default usage report threshold in bytes
    
    logger: # log output setting
      enable: true # true or false
      level: info  # how detailed to output, value: trace, debug, info, warn, error, fatal, panic
      reportCaller: false # enable the caller report or not, value: true or false
---
# Source: free5gc/charts/smf2/templates/configmap-uerouting.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: free5gc-smf2-uerouting
  labels:
    app.kubernetes.io/name: smf2
    helm.sh/chart: smf2-0.1.0
    app.kubernetes.io/instance: free5gc
    app.kubernetes.io/managed-by: Helm
data:
  uerouting.yaml: |
    info:
      version: 1.0.7
      description: Routing information for UE
    
    ueRoutingInfo: # the list of UE routing information
      UE1: # Group Name
        members:
        - imsi-208930000007487 # Subscription Permanent Identifier of the UE
        topology: # Network topology for this group (Uplink: A->B, Downlink: B->A)
        # default path derived from this topology
        # node name should be consistent with smfcfg.yaml
          - A: gNB1
            B: BranchingUPF
          - A: BranchingUPF
            B: AnchorUPF1
        specificPath:
          - dest: 10.60.0.103/32 # the destination IP address on Data Network (DN)
            # the order of UPF nodes in this path. We use the UPF's name to represent each UPF node.
            # The UPF's name should be consistent with smfcfg.yaml
            path: [BranchingUPF, AnchorUPF2]
    
      UE2: # Group Name
        members:
        - imsi-208930000007486 # Subscription Permanent Identifier of the UE
        topology: # Network topology for this group (Uplink: A->B, Downlink: B->A)
        # default path derived from this topology
        # node name should be consistent with smfcfg.yaml
          - A: gNB1
            B: BranchingUPF
          - A: BranchingUPF
            B: AnchorUPF1
        specificPath:
          - dest: 10.0.0.11/32 # the destination IP address on Data Network (DN)
            # the order of UPF nodes in this path. We use the UPF's name to represent each UPF node.
            # The UPF's name should be consistent with smfcfg.yaml
            path: [BranchingUPF, AnchorUPF2]
    
    routeProfile: # Maintains the mapping between RouteProfileID and ForwardingPolicyID of UPF
      MEC1: # Route Profile identifier
        forwardingPolicyID: 10 # Forwarding Policy ID of the route profile
    
    pfdDataForApp: # PFDs for an Application
      - applicationId: edge # Application identifier
        pfds: # PFDs for the Application
          - pfdID: pfd1 # PFD identifier
            flowDescriptions: # Represents a 3-tuple with protocol, server ip and server port for UL/DL application traffic
              - permit out ip from 10.60.0.1 8080 to any
---
# Source: free5gc/charts/smf2/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: free5gc-smf2
  labels:
    app.kubernetes.io/name: smf2
    helm.sh/chart: smf2-0.1.0
    app.kubernetes.io/instance: free5gc
    app.kubernetes.io/managed-by: Helm
data:
  smfcfg.yaml: |
    
    info:
      version: 1.0.7
      description: SMF initial local configuration
    
    configuration:
      smfName: SMF2 # the name of this SMF
      sbi: # Service-based interface information
        scheme: http # the protocol for sbi (http or https)
        registerIPv4: free5gc-smf2-sbi
        bindingIPv4: 0.0.0.0
        port: 8000 # Port used to bind the service
        tls: # the local path of TLS key
          key: cert/smf.key # SMF TLS Certificate
          pem: cert/smf.pem # SMF TLS Private key
      serviceNameList: # the SBI services provided by this SMF, refer to TS 29.502
        - nsmf-pdusession # Nsmf_PDUSession service
        - nsmf-event-exposure # Nsmf_EventExposure service
        - nsmf-oam # OAM service
      snssaiInfos:
        -
          dnnInfos:
          - dnn: internet
            dns:
              ipv4: 8.8.8.8
              ipv6: 2001:4860:4860::8888
          sNssai:
            sd: "010203"
            sst: 1
      plmnList:
        -
          mcc: 999
          mnc: 70
      locality: area1 # Name of the location where a set of AMF, SMF, PCF and UPFs are located
      pfcp: # the IP address of N4 interface on this SMF (PFCP)
        # addr config is deprecated in smf config v1.0.3, please use the following config
        nodeID: free5gc-smf2-pfcp # the Node ID of this SMF
        listenAddr: 0.0.0.0 # the IP/FQDN of N4 interface on this SMF (PFCP)
        externalAddr: free5gc-smf2-pfcp # the IP/FQDN of N4 interface on this SMF (PFCP)
      userplaneInformation: # list of userplane information
        upNodes: # information of userplane node (AN or UPF)
          gNB1: # the name of the node
            type: AN # the type of the node (AN or UPF)
          UPF: # the name of the node
            type: UPF # the type of the node (AN or UPF)
            nodeID: free5gc-upf2-pfcp # the Node ID of this UPF
            addr: free5gc-upf2-pfcp # the IP/FQDN of N4 interface on this UPF (PFCP)
            sNssaiUpfInfos:  # S-NSSAI information list for this UPF
              - sNssai:  # S-NSSAI (Single Network Slice Selection Assistance Information)
                  sst: 1  # Slice/Service Type (uinteger, range: 0~255)
                  sd: "010203"  # Slice Differentiator (3 bytes hex string, range: 000000~FFFFFF)
                dnnUpfInfoList:  # DNN information list for this S-NSSAI
                  - dnn: internet
                    pools:
                      - cidr: 10.61.0.0/16
                    staticPools:
                      - cidr: 10.61.100.0/24
            interfaces: # Interface list for this UPF
              - interfaceType: N3 # the type of the interface (N3 or N9)
                endpoints: # the IP address of this N3/N9 interface on this UPF
                  - free5gc-upf2-gtpu
                networkInstances:  # Data Network Name (DNN)
                  - internet
        links: # the topology graph of userplane, A and B represent the two nodes of each link
          - A: gNB1
            B: UPF
      # retransmission timer for pdu session modification command
      t3591:
        enable: true     # true or false
        expireTime: 16s   # default is 6 seconds
        maxRetryTimes: 3 # the max number of retransmission
      # retransmission timer for pdu session release command
      t3592:
        enable: true     # true or false
        expireTime: 16s   # default is 6 seconds
        maxRetryTimes: 3 # the max number of retransmission
      nrfUri: http://free5gc-nrf-sbi:8000
      #urrPeriod: 10 # default usage report period in seconds
      #urrThreshold: 1000 # default usage report threshold in bytes
    
    logger: # log output setting
      enable: true # true or false
      level: info  # how detailed to output, value: trace, debug, info, warn, error, fatal, panic
      reportCaller: false # enable the caller report or not, value: true or false
---
# Source: free5gc/charts/udm/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: free5gc-udm
  labels:
    app.kubernetes.io/name: udm
    helm.sh/chart: udm-0.1.0
    app.kubernetes.io/instance: free5gc
    app.kubernetes.io/managed-by: Helm
data:
  udmcfg.yaml: |
    
    
    info:
      version: 1.0.3
      description: UDM initial local configuration
    
    configuration:
      serviceNameList: # the SBI services provided by this UDM, refer to TS 29.503
        - nudm-sdm # Nudm_SubscriberDataManagement service
        - nudm-uecm # Nudm_UEContextManagement service
        - nudm-ueau # Nudm_UEAuthenticationManagement service
        - nudm-ee # Nudm_EventExposureManagement service
        - nudm-pp # Nudm_ParameterProvisionDataManagement service
      sbi: # Service-based interface information
        scheme: http # the protocol for sbi (http or https)
        registerIPv4: free5gc-udm-sbi
        bindingIPv4: 0.0.0.0
        port: 8000 # Port used to bind the service
        tls: # the local path of TLS key
          pem: cert/udm.pem # UDM TLS Certificate
          key: cert/udm.key # UDM TLS Private key
      nrfUri: http://free5gc-nrf-sbi:8000
    
      # test data set from TS33501-f60 Annex C.4
      SuciProfile: # Home Network Public Key ID = slice index +1
        - ProtectionScheme: 1 # Protect Scheme: Profile A
          PrivateKey: c53c22208b61860b06c62e5406a7b330c2b577aa5558981510d128247d38bd1d
          PublicKey: 5a8d38864820197c3394b92613b20b91633cbd897119273bf8e4a6f4eec0a650
        - ProtectionScheme: 2 # Protect Scheme: Profile B
          PrivateKey: F1AB1074477EBCC7F554EA1C5FC368B1616730155E0041AC447D6301975FECDA
          PublicKey: 0472DA71976234CE833A6907425867B82E074D44EF907DFB4B3E21C1C2256EBCD15A7DED52FCBB097A4ED250E036C7B9C8C7004C4EEDC4F068CD7BF8D3F900E3B4
    
    logger: # log output setting
      enable: true # true or false
      level: info  # how detailed to output, value: trace, debug, info, warn, error, fatal, panic
      reportCaller: false # enable the caller report or not, value: true or false
---
# Source: free5gc/charts/udr/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: free5gc-udr
  labels:
    app.kubernetes.io/name: udr
    helm.sh/chart: udr-0.1.0
    app.kubernetes.io/instance: free5gc
    app.kubernetes.io/managed-by: Helm
data:
  udrcfg.yaml: |
    
    
    info:
      version: 1.0.2
      description: UDR initial local configuration
    
    configuration:
      sbi: # Service-based interface information
        scheme: http # the protocol for sbi (http or https)
        registerIPv4: free5gc-udr-sbi
        bindingIPv4: 0.0.0.0
        port: 8000 # port used to bind the service
        tls: # the local path of TLS key
          pem: cert/udr.pem # UDR TLS Certificate
          key: cert/udr.key # UDR TLS Private key
      mongodb:
        name: free5gc # Database name in MongoDB
        url: mongodb://free5gc-mongodb:27017  # a valid URL of the mongodb   
      nrfUri: http://free5gc-nrf-sbi:8000
    
    logger: # log output setting
      enable: true # true or false
      level: info # how detailed to output, value: trace, debug, info, warn, error, fatal, panic
      reportCaller: false # enable the caller report or not, value: true or false
---
# Source: free5gc/charts/upf1/templates/configmap-entrypoint.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: free5gc-upf1-entrypoint
  labels:
    app.kubernetes.io/name: upf1
    helm.sh/chart: upf1-0.1.0
    app.kubernetes.io/instance: free5gc
    app.kubernetes.io/managed-by: Helm
data:
  upf-iptables.sh: |
    #!/bin/bash
    #
    # Configure iptables in UPF
    #
    iptables -t nat -A POSTROUTING -o eth0  -j MASQUERADE
    iptables -I FORWARD 1 -j ACCEPT
---
# Source: free5gc/charts/upf1/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: free5gc-upf1
  labels:
    app.kubernetes.io/name: upf1
    helm.sh/chart: upf1-0.1.0
    app.kubernetes.io/instance: free5gc
    app.kubernetes.io/managed-by: Helm
data:
  upfcfg.yaml: |
    
    version: 1.0.3
    description: UPF initial local configuration
    
    # The listen IP and nodeID of the N4 interface on this UPF (Can't set to 0.0.0.0)
    pfcp:
      addr: 0.0.0.0   # IP addr for listening
      nodeID: free5gc-upf1-pfcp.free5gc.svc.cluster.local # External IP or FQDN can be reached
      retransTimeout: 1s # retransmission timeout
      maxRetrans: 3 # the max number of retransmission
    
    gtpu:
      forwarder: gtp5g
      # The IP list of the N3/N9 interfaces on this UPF
      # If there are multiple connection, set addr to 0.0.0.0 or list all the addresses
      ifList:
        - addr: 0.0.0.0
          type: N3
          name: free5gc-upf1-gtpu.free5gc.svc.cluster.local
          # ifname: gtpif
          # mtu: 1400
    
    # The DNN list supported by UPF
    dnnList:
      -
        cidr: 10.60.0.0/24
        dnn: internet
    
    logger: # log output setting
      enable: true # true or false
      level: info # how detailed to output, value: trace, debug, info, warn, error, fatal, panic
      reportCaller: false # enable the caller report or not, value: true or false
---
# Source: free5gc/charts/upf2/templates/configmap-entrypoint.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: free5gc-upf2-entrypoint
  labels:
    app.kubernetes.io/name: upf2
    helm.sh/chart: upf2-0.1.0
    app.kubernetes.io/instance: free5gc
    app.kubernetes.io/managed-by: Helm
data:
  upf-iptables.sh: |
    #!/bin/bash
    #
    # Configure iptables in UPF
    #
    iptables -t nat -A POSTROUTING -o eth0  -j MASQUERADE
    iptables -I FORWARD 1 -j ACCEPT
---
# Source: free5gc/charts/upf2/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: free5gc-upf2
  labels:
    app.kubernetes.io/name: upf2
    helm.sh/chart: upf2-0.1.0
    app.kubernetes.io/instance: free5gc
    app.kubernetes.io/managed-by: Helm
data:
  upfcfg.yaml: |
    
    
    version: 1.0.3
    description: UPF initial local configuration
    
    # The listen IP and nodeID of the N4 interface on this UPF (Can't set to 0.0.0.0)
    pfcp:
      addr: 0.0.0.0   # IP addr for listening
      nodeID: free5gc-upf2-pfcp.free5gc.svc.cluster.local # External IP or FQDN can be reached
      retransTimeout: 1s # retransmission timeout
      maxRetrans: 3 # the max number of retransmission
    
    gtpu:
      forwarder: gtp5g
      # The IP list of the N3/N9 interfaces on this UPF
      # If there are multiple connection, set addr to 0.0.0.0 or list all the addresses
      ifList:
        - addr: 0.0.0.0
          type: N3
          name: free5gc-upf2-gtpu.free5gc.svc.cluster.local
          # ifname: gtpif
          # mtu: 1400
    
    # The DNN list supported by UPF
    dnnList:
      -
        cidr: 10.61.0.0/24
        dnn: internet
    
    logger: # log output setting
      enable: true # true or false
      level: info # how detailed to output, value: trace, debug, info, warn, error, fatal, panic
      reportCaller: false # enable the caller report or not, value: true or false
---
# Source: free5gc/charts/webui/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: free5gc-webui
  labels:
    app.kubernetes.io/name: webui
    helm.sh/chart: webui-0.1.0
    app.kubernetes.io/instance: free5gc
    app.kubernetes.io/managed-by: Helm
data:
  webuicfg.yaml: |
    
    
    info:
      version: 1.0.1
      description: WebUI initial local configuration
    
    configuration:
      mongodb: # the mongodb connected by this webui
        name: free5gc # name of the mongodb
        url: mongodb://free5gc-mongodb:27017  # a valid URL of the mongodb   
      billingServer:
        hostIPv4: free5gc-free5gc.lab5g.gradiant.org
        listenPort: 2122
        port: 2121
        tls:
          pem: cert/chf.pem
          key: cert/chf.key
    
    logger: # log output setting
      enable: true # true or false
      level: info # how detailed to output, value: trace, debug, info, warn, error, fatal, panic
      reportCaller: false # enable the caller report or not, value: true or false
---
# Source: free5gc/charts/mongodb/templates/standalone/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: free5gc-mongodb
  namespace: "free5gc"
  labels:
    app.kubernetes.io/name: mongodb
    helm.sh/chart: mongodb-12.1.31
    app.kubernetes.io/instance: free5gc
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: mongodb
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "8Gi"
---
# Source: free5gc/charts/amf/templates/service-ngap.yaml
apiVersion: v1
kind: Service
metadata:
  name: free5gc-amf-ngap
  namespace: "free5gc"
  labels:
    app.kubernetes.io/name: amf
    helm.sh/chart: amf-0.1.0
    app.kubernetes.io/instance: free5gc
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - name: ngap
      port: 38412
      targetPort: ngap
      protocol: SCTP
      nodePort: null
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/name: amf
    app.kubernetes.io/instance: free5gc
---
# Source: free5gc/charts/amf/templates/service-sbi.yaml
apiVersion: v1
kind: Service
metadata:
  name: free5gc-amf-sbi
  namespace: "free5gc"
  labels:
    app.kubernetes.io/name: amf
    helm.sh/chart: amf-0.1.0
    app.kubernetes.io/instance: free5gc
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - name: sbi
      port: 8000
      targetPort: sbi
      nodePort: null
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/name: amf
    app.kubernetes.io/instance: free5gc
---
# Source: free5gc/charts/ausf/templates/service-sbi.yaml
apiVersion: v1
kind: Service
metadata:
  name: free5gc-ausf-sbi
  namespace: "free5gc"
  labels:
    app.kubernetes.io/name: ausf
    helm.sh/chart: ausf-0.1.0
    app.kubernetes.io/instance: free5gc
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - name: sbi
      port: 8000
      targetPort: sbi
      nodePort: null
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/name: ausf
    app.kubernetes.io/instance: free5gc
---
# Source: free5gc/charts/chf/templates/service-sbi.yaml
apiVersion: v1
kind: Service
metadata:
  name: free5gc-chf-sbi
  namespace: "free5gc"
  labels:
    app.kubernetes.io/name: chf
    helm.sh/chart: chf-0.1.0
    app.kubernetes.io/instance: free5gc
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - name: sbi
      port: 8000
      targetPort: sbi
      nodePort: null
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/name: chf
    app.kubernetes.io/instance: free5gc
---
# Source: free5gc/charts/mongodb/templates/standalone/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: free5gc-mongodb
  namespace: "free5gc"
  labels:
    app.kubernetes.io/name: mongodb
    helm.sh/chart: mongodb-12.1.31
    app.kubernetes.io/instance: free5gc
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: mongodb
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - name: "mongodb"
      port: 27017
      targetPort: mongodb
      nodePort: null
  selector:
    app.kubernetes.io/name: mongodb
    app.kubernetes.io/instance: free5gc
    app.kubernetes.io/component: mongodb
---
# Source: free5gc/charts/nrf/templates/service-sbi.yaml
apiVersion: v1
kind: Service
metadata:
  name: free5gc-nrf-sbi
  namespace: "free5gc"
  labels:
    app.kubernetes.io/name: nrf
    helm.sh/chart: nrf-0.1.0
    app.kubernetes.io/instance: free5gc
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - name: sbi
      port: 8000
      targetPort: sbi
      nodePort: null
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/name: nrf
    app.kubernetes.io/instance: free5gc
---
# Source: free5gc/charts/nssf/templates/service-sbi.yaml
apiVersion: v1
kind: Service
metadata:
  name: free5gc-nssf-sbi
  namespace: "free5gc"
  labels:
    app.kubernetes.io/name: nssf
    helm.sh/chart: nssf-0.1.0
    app.kubernetes.io/instance: free5gc
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - name: sbi
      port: 8000
      targetPort: sbi
      nodePort: null
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/name: nssf
    app.kubernetes.io/instance: free5gc
---
# Source: free5gc/charts/pcf/templates/service-sbi.yaml
apiVersion: v1
kind: Service
metadata:
  name: free5gc-pcf-sbi
  namespace: "free5gc"
  labels:
    app.kubernetes.io/name: pcf
    helm.sh/chart: pcf-0.1.0
    app.kubernetes.io/instance: free5gc
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - name: sbi
      port: 8000
      targetPort: sbi
      nodePort: null
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/name: pcf
    app.kubernetes.io/instance: free5gc
---
# Source: free5gc/charts/smf1/templates/service-pfcp.yaml
apiVersion: v1
kind: Service
metadata:
  name: free5gc-smf1-pfcp
  namespace: "free5gc"
  labels:
    app.kubernetes.io/name: smf1
    helm.sh/chart: smf1-0.1.0
    app.kubernetes.io/instance: free5gc
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - name: pfcp
      port: 8805
      protocol: UDP
      targetPort: pfcp
      nodePort: null
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/name: smf1
    app.kubernetes.io/instance: free5gc
---
# Source: free5gc/charts/smf1/templates/service-sbi.yaml
apiVersion: v1
kind: Service
metadata:
  name: free5gc-smf1-sbi
  namespace: "free5gc"
  labels:
    app.kubernetes.io/name: smf1
    helm.sh/chart: smf1-0.1.0
    app.kubernetes.io/instance: free5gc
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - name: sbi
      port: 8000
      targetPort: sbi
      nodePort: null
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/name: smf1
    app.kubernetes.io/instance: free5gc
---
# Source: free5gc/charts/smf2/templates/service-pfcp.yaml
apiVersion: v1
kind: Service
metadata:
  name: free5gc-smf2-pfcp
  namespace: "free5gc"
  labels:
    app.kubernetes.io/name: smf2
    helm.sh/chart: smf2-0.1.0
    app.kubernetes.io/instance: free5gc
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - name: pfcp
      port: 8805
      protocol: UDP
      targetPort: pfcp
      nodePort: null
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/name: smf2
    app.kubernetes.io/instance: free5gc
---
# Source: free5gc/charts/smf2/templates/service-sbi.yaml
apiVersion: v1
kind: Service
metadata:
  name: free5gc-smf2-sbi
  namespace: "free5gc"
  labels:
    app.kubernetes.io/name: smf2
    helm.sh/chart: smf2-0.1.0
    app.kubernetes.io/instance: free5gc
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - name: sbi
      port: 8000
      targetPort: sbi
      nodePort: null
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/name: smf2
    app.kubernetes.io/instance: free5gc
---
# Source: free5gc/charts/udm/templates/service-sbi.yaml
apiVersion: v1
kind: Service
metadata:
  name: free5gc-udm-sbi
  namespace: "free5gc"
  labels:
    app.kubernetes.io/name: udm
    helm.sh/chart: udm-0.1.0
    app.kubernetes.io/instance: free5gc
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - name: sbi
      port: 8000
      targetPort: sbi
      nodePort: null
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/name: udm
    app.kubernetes.io/instance: free5gc
---
# Source: free5gc/charts/udr/templates/service-sbi.yaml
apiVersion: v1
kind: Service
metadata:
  name: free5gc-udr-sbi
  namespace: "free5gc"
  labels:
    app.kubernetes.io/name: udr
    helm.sh/chart: udr-0.1.0
    app.kubernetes.io/instance: free5gc
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - name: sbi
      port: 8000
      targetPort: sbi
      nodePort: null
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/name: udr
    app.kubernetes.io/instance: free5gc
---
# Source: free5gc/charts/upf1/templates/service-gtpu.yaml
apiVersion: v1
kind: Service
metadata:
  name: free5gc-upf1-gtpu
  namespace: "free5gc"
  labels:
    app.kubernetes.io/name: upf1
    helm.sh/chart: upf1-0.1.0
    app.kubernetes.io/instance: free5gc
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - name: gtpu
      port: 2152
      protocol: UDP
      targetPort: gtpu
      nodePort: null
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/name: upf1
    app.kubernetes.io/instance: free5gc
---
# Source: free5gc/charts/upf1/templates/service-pfcp.yaml
apiVersion: v1
kind: Service
metadata:
  name: free5gc-upf1-pfcp
  namespace: "free5gc"
  labels:
    app.kubernetes.io/name: upf1
    helm.sh/chart: upf1-0.1.0
    app.kubernetes.io/instance: free5gc
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - name: pfcp
      port: 8805
      protocol: UDP
      targetPort: pfcp
      nodePort: null
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/name: upf1
    app.kubernetes.io/instance: free5gc
---
# Source: free5gc/charts/upf2/templates/service-gtpu.yaml
apiVersion: v1
kind: Service
metadata:
  name: free5gc-upf2-gtpu
  namespace: "free5gc"
  labels:
    app.kubernetes.io/name: upf2
    helm.sh/chart: upf2-0.1.0
    app.kubernetes.io/instance: free5gc
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - name: gtpu
      port: 2152
      protocol: UDP
      targetPort: gtpu
      nodePort: null
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/name: upf2
    app.kubernetes.io/instance: free5gc
---
# Source: free5gc/charts/upf2/templates/service-pfcp.yaml
apiVersion: v1
kind: Service
metadata:
  name: free5gc-upf2-pfcp
  namespace: "free5gc"
  labels:
    app.kubernetes.io/name: upf2
    helm.sh/chart: upf2-0.1.0
    app.kubernetes.io/instance: free5gc
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - name: pfcp
      port: 8805
      protocol: UDP
      targetPort: pfcp
      nodePort: null
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/name: upf2
    app.kubernetes.io/instance: free5gc
---
# Source: free5gc/charts/webui/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: free5gc-webui
  namespace: "free5gc"
  labels:
    app.kubernetes.io/name: webui
    helm.sh/chart: webui-0.1.0
    app.kubernetes.io/instance: free5gc
    app.kubernetes.io/managed-by: Helm
spec:
  type: NodePort
  sessionAffinity: None
  externalTrafficPolicy: "Cluster"
  ports:
    - name: http
      port: 5000
      protocol: TCP
      targetPort: http
      nodePort: 30500
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/name: webui
    app.kubernetes.io/instance: free5gc
---
# Source: free5gc/charts/amf/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: free5gc-amf
  namespace: "free5gc"
  labels:
    app.kubernetes.io/name: amf
    helm.sh/chart: amf-0.1.0
    app.kubernetes.io/instance: free5gc
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: amf
      app.kubernetes.io/instance: free5gc
  strategy:
    type: RollingUpdate
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: amf
        helm.sh/chart: amf-0.1.0
        app.kubernetes.io/instance: free5gc
        app.kubernetes.io/managed-by: Helm
      annotations:
    spec:
      
      securityContext:
        fsGroup: 1001
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: amf
                    app.kubernetes.io/instance: free5gc
                namespaces:
                  - "free5gc"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      serviceAccountName: default
      priorityClassName: ""
      containers:
        - name: free5gc-amf
          image: docker.io/free5gc/amf:v3.3.0
          imagePullPolicy: "IfNotPresent"
          command: ["./amf", "-c", "./config/amfcfg.yaml"]
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
          env:
            - name: GIN_MODE
              value: release
          envFrom:
          ports:
            - name: sbi
              containerPort: 8000
            - name: ngap
              containerPort: 38412
              protocol: SCTP
          livenessProbe:
          # Using tcpSocket instead of httpGet because free5gc only support HTTP/2
            tcpSocket:
              port: sbi
            initialDelaySeconds: 600
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
          readinessProbe:
          # Using tcpSocket instead of httpGet because free5gc only support HTTP/2
            tcpSocket:
              port: sbi
            initialDelaySeconds: 30
            periodSeconds: 5
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 5
          resources:
            limits: {}
            requests: {}
          volumeMounts:
            - name: config
              mountPath:  /free5gc/config/amfcfg.yaml
              subPath: "amfcfg.yaml"
      volumes:
        - name: config
          configMap:
            name: free5gc-amf
---
# Source: free5gc/charts/ausf/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: free5gc-ausf
  namespace: "free5gc"
  labels:
    app.kubernetes.io/name: ausf
    helm.sh/chart: ausf-0.1.0
    app.kubernetes.io/instance: free5gc
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: ausf
      app.kubernetes.io/instance: free5gc
  strategy:
    type: RollingUpdate
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ausf
        helm.sh/chart: ausf-0.1.0
        app.kubernetes.io/instance: free5gc
        app.kubernetes.io/managed-by: Helm
      annotations:
    spec:
      
      securityContext:
        fsGroup: 1001
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: ausf
                    app.kubernetes.io/instance: free5gc
                namespaces:
                  - "free5gc"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      serviceAccountName: default
      priorityClassName: ""
      containers:
        - name: free5gc-ausf
          image: docker.io/free5gc/ausf:v3.3.0
          imagePullPolicy: "IfNotPresent"
          command: ["./ausf", "-c", "./config/ausfcfg.yaml"]
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
          env:
            - name: GIN_MODE
              value: release
          envFrom:
          ports:
            - name: sbi
              containerPort: 8000
          livenessProbe:
          # Using tcpSocket instead of httpGet because free5gc only support HTTP/2
            tcpSocket:
              port: sbi
            initialDelaySeconds: 600
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
          readinessProbe:
          # Using tcpSocket instead of httpGet because free5gc only support HTTP/2
            tcpSocket:
              port: sbi
            initialDelaySeconds: 30
            periodSeconds: 5
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 5
          resources:
            limits: {}
            requests: {}
          volumeMounts:
            - name: config
              mountPath:  /free5gc/config/ausfcfg.yaml
              subPath: "ausfcfg.yaml"
      volumes:
        - name: config
          configMap:
            name: free5gc-ausf
---
# Source: free5gc/charts/chf/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: free5gc-chf
  namespace: "free5gc"
  labels:
    app.kubernetes.io/name: chf
    helm.sh/chart: chf-0.1.0
    app.kubernetes.io/instance: free5gc
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: chf
      app.kubernetes.io/instance: free5gc
  strategy:
    type: RollingUpdate
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: chf
        helm.sh/chart: chf-0.1.0
        app.kubernetes.io/instance: free5gc
        app.kubernetes.io/managed-by: Helm
      annotations:
    spec:
      
      securityContext:
        fsGroup: 1001
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: chf
                    app.kubernetes.io/instance: free5gc
                namespaces:
                  - "free5gc"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      serviceAccountName: default
      priorityClassName: ""
      containers:
        - name: free5gc-chf
          image: docker.io/free5gc/chf:latest
          imagePullPolicy: "IfNotPresent"
          command: ["./chf", "-c", "./config/chfcfg.yaml"]
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
          env:
            - name: GIN_MODE
              value: release
          envFrom:
          ports:
            - name: sbi
              containerPort: 8000
          livenessProbe:
          # Using tcpSocket instead of httpGet because free5gc only support HTTP/2
            tcpSocket:
              port: sbi
            initialDelaySeconds: 600
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
          readinessProbe:
          # Using tcpSocket instead of httpGet because free5gc only support HTTP/2
            tcpSocket:
              port: sbi
            initialDelaySeconds: 30
            periodSeconds: 5
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 5
          resources:
            limits: {}
            requests: {}
          volumeMounts:
            - name: config
              mountPath:  /free5gc/config/chfcfg.yaml
              subPath: "chfcfg.yaml"
      volumes:
        - name: config
          configMap:
            name: free5gc-chf
---
# Source: free5gc/charts/mongodb/templates/standalone/dep-sts.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: free5gc-mongodb
  namespace: "free5gc"
  labels:
    app.kubernetes.io/name: mongodb
    helm.sh/chart: mongodb-12.1.31
    app.kubernetes.io/instance: free5gc
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: mongodb
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: mongodb
      app.kubernetes.io/instance: free5gc
      app.kubernetes.io/component: mongodb
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mongodb
        helm.sh/chart: mongodb-12.1.31
        app.kubernetes.io/instance: free5gc
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: mongodb
    spec:
      
      serviceAccountName: free5gc-mongodb
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: mongodb
                    app.kubernetes.io/instance: free5gc
                    app.kubernetes.io/component: mongodb
                namespaces:
                  - "free5gc"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
        sysctls: []
      
      containers:
        - name: mongodb
          image: docker.io/bitnami/mongodb:5.0.10-debian-11-r3
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: ALLOW_EMPTY_PASSWORD
              value: "yes"
            - name: MONGODB_SYSTEM_LOG_VERBOSITY
              value: "0"
            - name: MONGODB_DISABLE_SYSTEM_LOG
              value: "no"
            - name: MONGODB_DISABLE_JAVASCRIPT
              value: "no"
            - name: MONGODB_ENABLE_JOURNAL
              value: "yes"
            - name: MONGODB_PORT_NUMBER
              value: "27017"
            - name: MONGODB_ENABLE_IPV6
              value: "no"
            - name: MONGODB_ENABLE_DIRECTORY_PER_DB
              value: "no"
          ports:
            - name: mongodb
              containerPort: 27017
          livenessProbe:
            failureThreshold: 6
            initialDelaySeconds: 30
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 10
            exec:
              command:
                - /bitnami/scripts/ping-mongodb.sh
          readinessProbe:
            failureThreshold: 6
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
            exec:
              command:
                - /bitnami/scripts/readiness-probe.sh
          resources:
            limits: {}
            requests: {}
          volumeMounts:
            - name: datadir
              mountPath: /bitnami/mongodb
              subPath: 
            - name: common-scripts
              mountPath: /bitnami/scripts
      volumes:
        - name: common-scripts
          configMap:
            name: free5gc-mongodb-common-scripts
            defaultMode: 0550
        - name: datadir
          persistentVolumeClaim:
            claimName: free5gc-mongodb
---
# Source: free5gc/charts/nrf/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: free5gc-nrf
  namespace: "free5gc"
  labels:
    app.kubernetes.io/name: nrf
    helm.sh/chart: nrf-0.1.0
    app.kubernetes.io/instance: free5gc
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: nrf
      app.kubernetes.io/instance: free5gc
  strategy:
    type: RollingUpdate
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: nrf
        helm.sh/chart: nrf-0.1.0
        app.kubernetes.io/instance: free5gc
        app.kubernetes.io/managed-by: Helm
      annotations:
    spec:
      
      securityContext:
        fsGroup: 1001
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: nrf
                    app.kubernetes.io/instance: free5gc
                namespaces:
                  - "free5gc"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      serviceAccountName: default
      priorityClassName: ""
      containers:
        - name: free5gc-nrf
          image: docker.io/free5gc/nrf:v3.3.0
          imagePullPolicy: "IfNotPresent"
          command: ["./nrf", "-c", "./config/nrfcfg.yaml"]
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
          env:
            - name: GIN_MODE
              value: release
          envFrom:
          ports:
            - name: sbi
              containerPort: 8000
          livenessProbe:
          # Using tcpSocket instead of httpGet because free5gc only support HTTP/2
            tcpSocket:
              port: sbi
            initialDelaySeconds: 600
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
          readinessProbe:
          # Using tcpSocket instead of httpGet because free5gc only support HTTP/2
            tcpSocket:
              port: sbi
            initialDelaySeconds: 30
            periodSeconds: 5
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 5
          resources:
            limits: {}
            requests: {}
          volumeMounts:
            - name: config
              mountPath:  /free5gc/config/nrfcfg.yaml
              subPath: "nrfcfg.yaml"
      volumes:
        - name: config
          configMap:
            name: free5gc-nrf
---
# Source: free5gc/charts/nssf/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: free5gc-nssf
  namespace: "free5gc"
  labels:
    app.kubernetes.io/name: nssf
    helm.sh/chart: nssf-0.1.0
    app.kubernetes.io/instance: free5gc
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: nssf
      app.kubernetes.io/instance: free5gc
  strategy:
    type: RollingUpdate
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: nssf
        helm.sh/chart: nssf-0.1.0
        app.kubernetes.io/instance: free5gc
        app.kubernetes.io/managed-by: Helm
      annotations:
    spec:
      
      securityContext:
        fsGroup: 1001
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: nssf
                    app.kubernetes.io/instance: free5gc
                namespaces:
                  - "free5gc"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      serviceAccountName: default
      priorityClassName: ""
      containers:
        - name: free5gc-nssf
          image: docker.io/free5gc/nssf:v3.3.0
          imagePullPolicy: "IfNotPresent"
          command: ["./nssf", "-c", "./config/nssfcfg.yaml"]
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
          env:
            - name: GIN_MODE
              value: release
          envFrom:
          ports:
            - name: sbi
              containerPort: 8000
          livenessProbe:
          # Using tcpSocket instead of httpGet because free5gc only support HTTP/2
            tcpSocket:
              port: sbi
            initialDelaySeconds: 600
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
          readinessProbe:
          # Using tcpSocket instead of httpGet because free5gc only support HTTP/2
            tcpSocket:
              port: sbi
            initialDelaySeconds: 30
            periodSeconds: 5
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 5
          resources:
            limits: {}
            requests: {}
          volumeMounts:
            - name: config
              mountPath:  /free5gc/config/nssfcfg.yaml
              subPath: "nssfcfg.yaml"
      volumes:
        - name: config
          configMap:
            name: free5gc-nssf
---
# Source: free5gc/charts/pcf/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: free5gc-pcf
  namespace: "free5gc"
  labels:
    app.kubernetes.io/name: pcf
    helm.sh/chart: pcf-0.1.0
    app.kubernetes.io/instance: free5gc
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: pcf
      app.kubernetes.io/instance: free5gc
  strategy:
    type: RollingUpdate
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: pcf
        helm.sh/chart: pcf-0.1.0
        app.kubernetes.io/instance: free5gc
        app.kubernetes.io/managed-by: Helm
      annotations:
    spec:
      
      securityContext:
        fsGroup: 1001
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: pcf
                    app.kubernetes.io/instance: free5gc
                namespaces:
                  - "free5gc"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      serviceAccountName: default
      priorityClassName: ""
      containers:
        - name: free5gc-pcf
          image: docker.io/free5gc/pcf:v3.3.0
          imagePullPolicy: "IfNotPresent"
          command: ["./pcf", "-c", "./config/pcfcfg.yaml"]
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
          env:
            - name: GIN_MODE
              value: release
          envFrom:
          ports:
            - name: sbi
              containerPort: 8000
          livenessProbe:
          # Using tcpSocket instead of httpGet because free5gc only support HTTP/2
            tcpSocket:
              port: sbi
            initialDelaySeconds: 600
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
          readinessProbe:
          # Using tcpSocket instead of httpGet because free5gc only support HTTP/2
            tcpSocket:
              port: sbi
            initialDelaySeconds: 30
            periodSeconds: 5
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 5
          resources:
            limits: {}
            requests: {}
          volumeMounts:
            - name: config
              mountPath:  /free5gc/config/pcfcfg.yaml
              subPath: "pcfcfg.yaml"
      volumes:
        - name: config
          configMap:
            name: free5gc-pcf
---
# Source: free5gc/charts/smf1/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: free5gc-smf1
  namespace: "free5gc"
  labels:
    app.kubernetes.io/name: smf1
    helm.sh/chart: smf1-0.1.0
    app.kubernetes.io/instance: free5gc
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: smf1
      app.kubernetes.io/instance: free5gc
  strategy:
    type: RollingUpdate
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: smf1
        helm.sh/chart: smf1-0.1.0
        app.kubernetes.io/instance: free5gc
        app.kubernetes.io/managed-by: Helm
      annotations:
    spec:
      
      securityContext:
        fsGroup: 1001
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: smf1
                    app.kubernetes.io/instance: free5gc
                namespaces:
                  - "free5gc"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      serviceAccountName: default
      priorityClassName: ""
      containers:
        - name: free5gc-smf1
          image: docker.io/free5gc/smf:v3.3.0
          imagePullPolicy: "IfNotPresent"
          command: ["./smf", "-c", "./config/smfcfg.yaml"]
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
          env:
            - name: GIN_MODE
              value: release
          envFrom:
          ports:
            - name: sbi
              containerPort: 8000
            - name: pfcp
              containerPort: 8805
              protocol: UDP
          livenessProbe:
          # Using tcpSocket instead of httpGet because free5gc only support HTTP/2
            tcpSocket:
              port: sbi
            initialDelaySeconds: 600
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
          readinessProbe:
          # Using tcpSocket instead of httpGet because free5gc only support HTTP/2
            tcpSocket:
              port: sbi
            initialDelaySeconds: 30
            periodSeconds: 5
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 5
          resources:
            limits: {}
            requests: {}
          volumeMounts:
            - name: config
              mountPath:  /free5gc/config/smfcfg.yaml
              subPath: "smfcfg.yaml"
            - name: uerouting
              mountPath:  /free5gc/config/uerouting.yaml
              subPath: "uerouting.yaml"
      volumes:
        - name: config
          configMap:
            name: free5gc-smf1
        - name: uerouting
          configMap:
            name: free5gc-smf1-uerouting
---
# Source: free5gc/charts/smf2/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: free5gc-smf2
  namespace: "free5gc"
  labels:
    app.kubernetes.io/name: smf2
    helm.sh/chart: smf2-0.1.0
    app.kubernetes.io/instance: free5gc
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: smf2
      app.kubernetes.io/instance: free5gc
  strategy:
    type: RollingUpdate
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: smf2
        helm.sh/chart: smf2-0.1.0
        app.kubernetes.io/instance: free5gc
        app.kubernetes.io/managed-by: Helm
      annotations:
    spec:
      
      securityContext:
        fsGroup: 1001
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: smf2
                    app.kubernetes.io/instance: free5gc
                namespaces:
                  - "free5gc"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      serviceAccountName: default
      priorityClassName: ""
      containers:
        - name: free5gc-smf2
          image: docker.io/free5gc/smf:v3.3.0
          imagePullPolicy: "IfNotPresent"
          command: ["./smf", "-c", "./config/smfcfg.yaml"]
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
          env:
            - name: GIN_MODE
              value: release
          envFrom:
          ports:
            - name: sbi
              containerPort: 8000
            - name: pfcp
              containerPort: 8805
              protocol: UDP
          livenessProbe:
          # Using tcpSocket instead of httpGet because free5gc only support HTTP/2
            tcpSocket:
              port: sbi
            initialDelaySeconds: 600
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
          readinessProbe:
          # Using tcpSocket instead of httpGet because free5gc only support HTTP/2
            tcpSocket:
              port: sbi
            initialDelaySeconds: 30
            periodSeconds: 5
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 5
          resources:
            limits: {}
            requests: {}
          volumeMounts:
            - name: config
              mountPath:  /free5gc/config/smfcfg.yaml
              subPath: "smfcfg.yaml"
            - name: uerouting
              mountPath:  /free5gc/config/uerouting.yaml
              subPath: "uerouting.yaml"
      volumes:
        - name: config
          configMap:
            name: free5gc-smf2
        - name: uerouting
          configMap:
            name: free5gc-smf2-uerouting
---
# Source: free5gc/charts/udm/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: free5gc-udm
  namespace: "free5gc"
  labels:
    app.kubernetes.io/name: udm
    helm.sh/chart: udm-0.1.0
    app.kubernetes.io/instance: free5gc
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: udm
      app.kubernetes.io/instance: free5gc
  strategy:
    type: RollingUpdate
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: udm
        helm.sh/chart: udm-0.1.0
        app.kubernetes.io/instance: free5gc
        app.kubernetes.io/managed-by: Helm
      annotations:
    spec:
      
      securityContext:
        fsGroup: 1001
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: udm
                    app.kubernetes.io/instance: free5gc
                namespaces:
                  - "free5gc"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      serviceAccountName: default
      priorityClassName: ""
      containers:
        - name: free5gc-udm
          image: docker.io/free5gc/udm:v3.3.0
          imagePullPolicy: "IfNotPresent"
          command: ["./udm", "-c", "./config/udmcfg.yaml"]
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
          env:
            - name: GIN_MODE
              value: release
          envFrom:
          ports:
            - name: sbi
              containerPort: 8000
          livenessProbe:
          # Using tcpSocket instead of httpGet because free5gc only support HTTP/2
            tcpSocket:
              port: sbi
            initialDelaySeconds: 600
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
          readinessProbe:
          # Using tcpSocket instead of httpGet because free5gc only support HTTP/2
            tcpSocket:
              port: sbi
            initialDelaySeconds: 30
            periodSeconds: 5
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 5
          resources:
            limits: {}
            requests: {}
          volumeMounts:
            - name: config
              mountPath:  /free5gc/config/udmcfg.yaml
              subPath: "udmcfg.yaml"
      volumes:
        - name: config
          configMap:
            name: free5gc-udm
---
# Source: free5gc/charts/udr/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: free5gc-udr
  namespace: "free5gc"
  labels:
    app.kubernetes.io/name: udr
    helm.sh/chart: udr-0.1.0
    app.kubernetes.io/instance: free5gc
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: udr
      app.kubernetes.io/instance: free5gc
  strategy:
    type: RollingUpdate
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: udr
        helm.sh/chart: udr-0.1.0
        app.kubernetes.io/instance: free5gc
        app.kubernetes.io/managed-by: Helm
      annotations:
    spec:
      
      securityContext:
        fsGroup: 1001
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: udr
                    app.kubernetes.io/instance: free5gc
                namespaces:
                  - "free5gc"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      serviceAccountName: default
      priorityClassName: ""
      containers:
        - name: free5gc-udr
          image: docker.io/free5gc/udr:v3.3.0
          imagePullPolicy: "IfNotPresent"
          command: ["./udr", "-c", "./config/udrcfg.yaml"]
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
          env:
            - name: GIN_MODE
              value: release
          envFrom:
          ports:
            - name: sbi
              containerPort: 8000
          livenessProbe:
          # Using tcpSocket instead of httpGet because free5gc only support HTTP/2
            tcpSocket:
              port: sbi
            initialDelaySeconds: 600
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
          readinessProbe:
          # Using tcpSocket instead of httpGet because free5gc only support HTTP/2
            tcpSocket:
              port: sbi
            initialDelaySeconds: 30
            periodSeconds: 5
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 5
          resources:
            limits: {}
            requests: {}
          volumeMounts:
            - name: config
              mountPath:  /free5gc/config/udrcfg.yaml
              subPath: "udrcfg.yaml"
      volumes:
        - name: config
          configMap:
            name: free5gc-udr
---
# Source: free5gc/charts/upf1/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: free5gc-upf1
  namespace: "free5gc"
  labels:
    app.kubernetes.io/name: upf1
    helm.sh/chart: upf1-0.1.0
    app.kubernetes.io/instance: free5gc
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: upf1
      app.kubernetes.io/instance: free5gc
  strategy:
    type: RollingUpdate
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: upf1
        helm.sh/chart: upf1-0.1.0
        app.kubernetes.io/instance: free5gc
        app.kubernetes.io/managed-by: Helm
      annotations:
    spec:
      
      securityContext:
        fsGroup: 1001
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: upf1
                    app.kubernetes.io/instance: free5gc
                namespaces:
                  - "free5gc"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      serviceAccountName: default
      priorityClassName: ""
      nodeSelector:
        kubernetes.io/hostname: ubuntu
      initContainers:
        - name: tun-create
          image: docker.io/free5gc/upf:v3.3.0
          imagePullPolicy: "IfNotPresent"
          command:
            - "/bin/bash" 
            - "-c"
            - "/upf-iptables.sh"
          securityContext:
            privileged: true
            capabilities:
              add: ["NET_ADMIN"]
          volumeMounts:
            - name: entrypoint
              mountPath:  /upf-iptables.sh
              subPath: upf-iptables.sh
      containers:
        - name: free5gc-upf1
          image: docker.io/free5gc/upf:v3.3.0
          imagePullPolicy: "IfNotPresent"
          command: ["./upf", "-c", "./config/upfcfg.yaml"]
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
            privileged: true
          env:
            - name: GIN_MODE
              value: release
          envFrom:
          ports:
            - name: pfcp
              containerPort: 8805
              protocol: UDP
            - name: gtpu
              containerPort: 2152
              protocol: UDP
          resources:
            limits: {}
            requests: {}
          volumeMounts:
            - name: config
              mountPath:  /free5gc/config/upfcfg.yaml
              subPath: "upfcfg.yaml"
      volumes:
        - name: config
          configMap:
            name: free5gc-upf1
        - name: entrypoint
          configMap:
            name: free5gc-upf1-entrypoint
            defaultMode: 0777
---
# Source: free5gc/charts/upf2/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: free5gc-upf2
  namespace: "free5gc"
  labels:
    app.kubernetes.io/name: upf2
    helm.sh/chart: upf2-0.1.0
    app.kubernetes.io/instance: free5gc
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: upf2
      app.kubernetes.io/instance: free5gc
  strategy:
    type: RollingUpdate
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: upf2
        helm.sh/chart: upf2-0.1.0
        app.kubernetes.io/instance: free5gc
        app.kubernetes.io/managed-by: Helm
      annotations:
    spec:
      
      securityContext:
        fsGroup: 1001
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: upf2
                    app.kubernetes.io/instance: free5gc
                namespaces:
                  - "free5gc"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      serviceAccountName: default
      priorityClassName: ""
      nodeSelector:
        kubernetes.io/hostname: ubuntu
      initContainers:
        - name: tun-create
          image: docker.io/free5gc/upf:v3.3.0
          imagePullPolicy: "IfNotPresent"
          command:
            - "/bin/bash" 
            - "-c"
            - "/upf-iptables.sh"
          securityContext:
            privileged: true
            capabilities:
              add: ["NET_ADMIN"]
          volumeMounts:
            - name: entrypoint
              mountPath:  /upf-iptables.sh
              subPath: upf-iptables.sh
      containers:
        - name: free5gc-upf2
          image: docker.io/free5gc/upf:v3.3.0
          imagePullPolicy: "IfNotPresent"
          command: ["./upf", "-c", "./config/upfcfg.yaml"]
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
            privileged: true
          env:
            - name: GIN_MODE
              value: release
          envFrom:
          ports:
            - name: pfcp
              containerPort: 8805
              protocol: UDP
            - name: gtpu
              containerPort: 2152
              protocol: UDP
          resources:
            limits: {}
            requests: {}
          volumeMounts:
            - name: config
              mountPath:  /free5gc/config/upfcfg.yaml
              subPath: "upfcfg.yaml"
      volumes:
        - name: config
          configMap:
            name: free5gc-upf2
        - name: entrypoint
          configMap:
            name: free5gc-upf2-entrypoint
            defaultMode: 0777
---
# Source: free5gc/charts/webui/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: free5gc-webui
  namespace: "free5gc"
  labels:
    app.kubernetes.io/name: webui
    helm.sh/chart: webui-0.1.0
    app.kubernetes.io/instance: free5gc
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: webui
      app.kubernetes.io/instance: free5gc
  strategy:
    type: RollingUpdate
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: webui
        helm.sh/chart: webui-0.1.0
        app.kubernetes.io/instance: free5gc
        app.kubernetes.io/managed-by: Helm
      annotations:
    spec:
      
      securityContext:
        fsGroup: 1001
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: webui
                    app.kubernetes.io/instance: free5gc
                namespaces:
                  - "free5gc"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      serviceAccountName: default
      priorityClassName: ""
      containers:
        - name: free5gc-webui
          image: docker.io/free5gc/webui:v3.3.0
          imagePullPolicy: "IfNotPresent"
          command: ["./webui", "-c", "./config/webuicfg.yaml"]
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
          env:
            - name: GIN_MODE
              value: release
          envFrom:
          ports:
            - name: http
              containerPort: 5000
              protocol: TCP
          resources:
            limits: {}
            requests: {}
          volumeMounts:
            - name: config
              mountPath:  /free5gc/config/webuicfg.yaml
              subPath: "webuicfg.yaml"
      volumes:
        - name: config
          configMap:
            name: free5gc-webui
---
# Source: free5gc/charts/amf/templates/hpa.yaml
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: free5gc-amf
spec:
  maxReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: free5gc-amf
---
# Source: free5gc/charts/ausf/templates/hpa.yaml
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: free5gc-ausf
spec:
  maxReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: free5gc-ausf
---
# Source: free5gc/charts/chf/templates/hpa.yaml
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: free5gc-chf
spec:
  maxReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: free5gc-chf
---
# Source: free5gc/charts/nrf/templates/hpa.yaml
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: free5gc-nrf
spec:
  maxReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: free5gc-nrf
---
# Source: free5gc/charts/nssf/templates/hpa.yaml
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: free5gc-nssf
spec:
  maxReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: free5gc-nssf
---
# Source: free5gc/charts/pcf/templates/hpa.yaml
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: free5gc-pcf
spec:
  maxReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: free5gc-pcf
---
# Source: free5gc/charts/smf1/templates/hpa.yaml
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: free5gc-smf1
spec:
  maxReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: free5gc-smf1
---
# Source: free5gc/charts/smf2/templates/hpa.yaml
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: free5gc-smf2
spec:
  maxReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: free5gc-smf2
---
# Source: free5gc/charts/udm/templates/hpa.yaml
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: free5gc-udm
spec:
  maxReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: free5gc-udm
---
# Source: free5gc/charts/udr/templates/hpa.yaml
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: free5gc-udr
spec:
  maxReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: free5gc-udr
---
# Source: free5gc/charts/upf1/templates/hpa.yaml
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: free5gc-upf1
spec:
  maxReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: free5gc-upf1
---
# Source: free5gc/charts/upf2/templates/hpa.yaml
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: free5gc-upf2
spec:
  maxReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: free5gc-upf2
---
# Source: free5gc/charts/webui/templates/hpa.yaml
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: free5gc-webui
spec:
  maxReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: free5gc-webui
---
# Source: free5gc/charts/webui/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: free5gc-webui
  labels:
    app.kubernetes.io/name: webui
    helm.sh/chart: webui-0.1.0
    app.kubernetes.io/instance: free5gc
    app.kubernetes.io/managed-by: Helm
  annotations:
spec:
  rules:
    - host: free5gc-free5gc.lab5g.gradiant.org
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend: 
              service:
                name: free5gc-webui
                port: 
                  name: http

